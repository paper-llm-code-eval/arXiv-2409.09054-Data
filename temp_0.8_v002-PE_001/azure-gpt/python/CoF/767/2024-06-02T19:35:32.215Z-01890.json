{
  "success": true,
  "attempt": 4,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 1,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/767/2024-06-02T19:35:32.215Z-01890.log",
  "attemptStart": 1717356932.215,
  "attemptEnd": 1717356963.144,
  "attemptDuration": 30.92900013923645,
  "code": "# Custom function to compute the number of rectangles given the coordinates\ndef compute_rectangles(coords):\n    point_set = set(coords)\n    count = 0\n    for i in range(len(coords)):\n        for j in range(i+1, len(coords)):\n            p1, p2 = coords[i], coords[j]\n            if p1[0] != p2[0] and p1[1] != p2[1]:\n                p3 = (p1[0], p2[1])\n                p4 = (p2[0], p1[1])\n                if p3 in point_set and p4 in point_set:\n                    count += 1\n    return count // 2  # Each rectangle is counted twice\n\n# Read input from file and process the data\nwith open('dreptc.in', 'r') as file:\n    N, MaxC = map(int, file.readline().split())\n    points_by_color = {c: [] for c in range(1, MaxC+1)}\n    for _ in range(N):\n        x, y, c = map(int, file.readline().split())\n        points_by_color[c].append((x, y))\n\n# Calculate the number of rectangles for each color\ntotal_rectangles = 0\nfor c in range(1, MaxC+1):\n    # Compute the number of correct rectangles for these points\n    rectangles = compute_rectangles(points_by_color[c])\n    # Sum up the rectangles\n    total_rectangles += rectangles\n\n# Write output to file\nwith open('dreptc.out', 'w') as file:\n    file.write(str(total_rectangles))\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1836,
  "metadata": {
    "id": 767,
    "examples": [
      {
        "in": "9 2\n3 10 1\n3 8 2\n3 6 1\n3 4 1\n3 0 1\n6 0 1\n6 4 1\n6 8 2\n6 10 1",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se consideră $N$ puncte colorate dispuse în plan. Ele sunt identificate prin coordontele lor întregi, pe axele OX și OY. Fiecare punct are asociat un număr natural între $1$ și $C$ reprezentând codul culorii lui. Un dreptunghi se numește *corect* dacă îndeplinește simultan următoarele condiții:\n\n* toate cele patru vârfuri se regăsesc printre cele N puncte date;\n* are laturile paralele cu axele OX, OY;\n* are vârfurile colorate în aceeași culoare.\n\n# Cerință\n\nSă se determine numărul maxim de dreptunghiuri *corecte* care se pot forma cu cele $N$ puncte din plan.\n\n# Date de intrare\n\nPe prima linie a fișierul text `dreptc.in` se găsesc două numere $N, MaxC$ reprezentând numărul de puncte din plan și numărul de culori asociate punctelor. Pe următoarele $N$ linii se citesc câte trei numere $x \\ y \\ c$ reprezentând în ordine coordonata pe axa OX (abscisa), coordonata pe axa OY (ordonata) și codul culorii asociate punctului.\n\n# Date de ieșire\n\nPe prima linie a fișierul text `dreptc.out` se va scrie un singur număr cu semnificația numărul maxim de dreptunghiuri corecte.\n\n# Restricții și precizări\n\n* $1 \\leq N \\leq 1 \\ 000$;\n* $1 \\leq C \\leq 5$;\n* $-1 \\ 000 \\leq x, y \\leq 1 \\ 000$;\n* Nu există două puncte cu aceleași coordonate\n* $40$% din teste vor avea $N \\leq 100$;",
    "header": {
      "problem_id": 767,
      "problem_name": "dreptc",
      "tags": "[Brute Force]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "dreptc.in",
      "output_filename": "dreptc.out",
      "multiple_solutions": false,
      "original_source": "OJI 2007 VIII: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "dreptc.in",
      "output": "dreptc.out"
    },
    "consoleInteraction": false
  }
}