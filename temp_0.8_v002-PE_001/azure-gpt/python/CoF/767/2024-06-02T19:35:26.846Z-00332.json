{
  "success": true,
  "attempt": 2,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 1,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/767/2024-06-02T19:35:26.846Z-00332.log",
  "attemptStart": 1717356926.846,
  "attemptEnd": 1717356962.324,
  "attemptDuration": 35.4779999256134,
  "code": "# Function to count the number of rectangles for a specific color\ndef count_rectangles(color_points):\n    x_dict = {}\n    rectangle_count = 0\n    \n    # Group points by X coordinate\n    for x, y in color_points:\n        if x in x_dict:\n            x_dict[x].append(y)\n        else:\n            x_dict[x] = [y]\n    \n    # Sort Y coordinates for each X coordinate\n    for x in x_dict:\n        x_dict[x].sort()\n    \n    # Count rectangles by choosing two X coordinates and then counting pairs of Y coordinates\n    x_keys = sorted(x_dict.keys())\n    for i in range(len(x_keys) - 1):\n        for j in range(i + 1, len(x_keys)):\n            y_pairs = 0\n            ys_i = set(x_dict[x_keys[i]])\n            ys_j = x_dict[x_keys[j]]\n            for y in ys_j:\n                if y in ys_i:\n                    y_pairs += 1\n            rectangle_count += y_pairs * (y_pairs - 1) // 2  # (y_pairs choose 2)\n    \n    return rectangle_count\n\n# Read from 'dreptc.in'\nwith open('dreptc.in', 'r') as file:\n    n, max_c = map(int, file.readline().split())\n    color_points = {i: [] for i in range(1, max_c + 1)}\n    \n    for _ in range(n):\n        x, y, c = map(int, file.readline().split())\n        color_points[c].append((x, y))\n\n# Count total number of correct rectangles\ntotal_rectangles = 0\nfor c in range(1, max_c + 1):\n    total_rectangles += count_rectangles(color_points[c])\n\n# Write to 'dreptc.out'\nwith open('dreptc.out', 'w') as file:\n    file.write(str(total_rectangles) + '\\n')\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1946,
  "metadata": {
    "id": 767,
    "examples": [
      {
        "in": "9 2\n3 10 1\n3 8 2\n3 6 1\n3 4 1\n3 0 1\n6 0 1\n6 4 1\n6 8 2\n6 10 1",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se consideră $N$ puncte colorate dispuse în plan. Ele sunt identificate prin coordontele lor întregi, pe axele OX și OY. Fiecare punct are asociat un număr natural între $1$ și $C$ reprezentând codul culorii lui. Un dreptunghi se numește *corect* dacă îndeplinește simultan următoarele condiții:\n\n* toate cele patru vârfuri se regăsesc printre cele N puncte date;\n* are laturile paralele cu axele OX, OY;\n* are vârfurile colorate în aceeași culoare.\n\n# Cerință\n\nSă se determine numărul maxim de dreptunghiuri *corecte* care se pot forma cu cele $N$ puncte din plan.\n\n# Date de intrare\n\nPe prima linie a fișierul text `dreptc.in` se găsesc două numere $N, MaxC$ reprezentând numărul de puncte din plan și numărul de culori asociate punctelor. Pe următoarele $N$ linii se citesc câte trei numere $x \\ y \\ c$ reprezentând în ordine coordonata pe axa OX (abscisa), coordonata pe axa OY (ordonata) și codul culorii asociate punctului.\n\n# Date de ieșire\n\nPe prima linie a fișierul text `dreptc.out` se va scrie un singur număr cu semnificația numărul maxim de dreptunghiuri corecte.\n\n# Restricții și precizări\n\n* $1 \\leq N \\leq 1 \\ 000$;\n* $1 \\leq C \\leq 5$;\n* $-1 \\ 000 \\leq x, y \\leq 1 \\ 000$;\n* Nu există două puncte cu aceleași coordonate\n* $40$% din teste vor avea $N \\leq 100$;",
    "header": {
      "problem_id": 767,
      "problem_name": "dreptc",
      "tags": "[Brute Force]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "dreptc.in",
      "output_filename": "dreptc.out",
      "multiple_solutions": false,
      "original_source": "OJI 2007 VIII: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "dreptc.in",
      "output": "dreptc.out"
    },
    "consoleInteraction": false
  }
}