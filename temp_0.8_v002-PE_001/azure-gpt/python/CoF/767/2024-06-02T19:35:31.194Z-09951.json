{
  "success": true,
  "attempt": 3,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 1,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/767/2024-06-02T19:35:31.194Z-09951.log",
  "attemptStart": 1717356931.194,
  "attemptEnd": 1717356963.793,
  "attemptDuration": 32.598999977111816,
  "code": "def read_input():\n    with open('dreptc.in', 'r') as fin:\n        N, MaxC = map(int, fin.readline().split())\n        points = [tuple(map(int, line.split())) for line in fin]\n    return N, MaxC, points\n\ndef write_output(max_rectangles):\n    with open('dreptc.out', 'w') as fout:\n        fout.write(str(max_rectangles) + '\\n')\n\ndef compute_rectangles(N, MaxC, points):\n    # Group points by color\n    color_points = {c: [] for c in range(1, MaxC + 1)}\n    for x, y, c in points:\n        color_points[c].append((x, y))\n    \n    # Compute rectangles for each color\n    max_rectangles = 0\n    for c in color_points:\n        # Create sorted lists of unique x and y coordinates for color c\n        x_coords = sorted({p[0] for p in color_points[c]})\n        y_coords = sorted({p[1] for p in color_points[c]})\n        \n        # Create a boolean matrix representing the presence of a point at (x, y)\n        matrix = [[False for _ in y_coords] for _ in x_coords]\n        point_index = {(x, y): (i, j) for i, x in enumerate(x_coords) for j, y in enumerate(y_coords)}\n        for x, y in color_points[c]:\n            matrix[point_index[x, y][0]][point_index[x, y][1]] = True\n        \n        # Count rectangles in matrix\n        for i in range(len(x_coords)):\n            for j in range(len(y_coords)):\n                if matrix[i][j]:\n                    for k in range(i + 1, len(x_coords)):\n                        if matrix[k][j]:\n                            for l in range(j + 1, len(y_coords)):\n                                if matrix[i][l] and matrix[k][l]:\n                                    max_rectangles += 1\n    return max_rectangles\n\n# Main program\nN, MaxC, points = read_input()\nmax_rectangles = compute_rectangles(N, MaxC, points)\nwrite_output(max_rectangles)\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1952,
  "metadata": {
    "id": 767,
    "examples": [
      {
        "in": "9 2\n3 10 1\n3 8 2\n3 6 1\n3 4 1\n3 0 1\n6 0 1\n6 4 1\n6 8 2\n6 10 1",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se consideră $N$ puncte colorate dispuse în plan. Ele sunt identificate prin coordontele lor întregi, pe axele OX și OY. Fiecare punct are asociat un număr natural între $1$ și $C$ reprezentând codul culorii lui. Un dreptunghi se numește *corect* dacă îndeplinește simultan următoarele condiții:\n\n* toate cele patru vârfuri se regăsesc printre cele N puncte date;\n* are laturile paralele cu axele OX, OY;\n* are vârfurile colorate în aceeași culoare.\n\n# Cerință\n\nSă se determine numărul maxim de dreptunghiuri *corecte* care se pot forma cu cele $N$ puncte din plan.\n\n# Date de intrare\n\nPe prima linie a fișierul text `dreptc.in` se găsesc două numere $N, MaxC$ reprezentând numărul de puncte din plan și numărul de culori asociate punctelor. Pe următoarele $N$ linii se citesc câte trei numere $x \\ y \\ c$ reprezentând în ordine coordonata pe axa OX (abscisa), coordonata pe axa OY (ordonata) și codul culorii asociate punctului.\n\n# Date de ieșire\n\nPe prima linie a fișierul text `dreptc.out` se va scrie un singur număr cu semnificația numărul maxim de dreptunghiuri corecte.\n\n# Restricții și precizări\n\n* $1 \\leq N \\leq 1 \\ 000$;\n* $1 \\leq C \\leq 5$;\n* $-1 \\ 000 \\leq x, y \\leq 1 \\ 000$;\n* Nu există două puncte cu aceleași coordonate\n* $40$% din teste vor avea $N \\leq 100$;",
    "header": {
      "problem_id": 767,
      "problem_name": "dreptc",
      "tags": "[Brute Force]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "dreptc.in",
      "output_filename": "dreptc.out",
      "multiple_solutions": false,
      "original_source": "OJI 2007 VIII: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "dreptc.in",
      "output": "dreptc.out"
    },
    "consoleInteraction": false
  }
}