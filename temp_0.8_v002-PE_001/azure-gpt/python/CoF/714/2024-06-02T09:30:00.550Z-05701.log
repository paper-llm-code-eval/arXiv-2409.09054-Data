---------- user ----------

Here is a programming challenge.
Please solve this problem efficiently, optimizing both time and memory usage.
Create the most efficient solution for this challenge in python. Utilize numpy and other highly efficient libraries whenever possible.
This problem has a memory limit of ~8MB so please be sensitive on using memory. Using too much memory may result in OOM.
The code must compile and be correct.
The solution must read from `pinochio.in` and write to `pinochio.out`.
The solution must not use `input()` or `print()` to read input data or write output data.

The solution must be written in a markdown code block.

---

În fiecare zi lucrătoare din săptămână, Pinochio spune câte o minciună datorită căreia nasul acestuia crește cu câte $p$ centimetri pe zi. Sâmbăta și duminica, când vine bunicul Gepeto acasă, pentru a nu-l supăra prea tare, Pinochio reușește să nu spună nici o minciună, ba chiar uitându-se în oglindă observă că în fiecare din aceste zile lungimea nasului său scade cu câte $1$ centimetru pe zi. Când începe o nouă săptămână, rămânând singur acasă Pinochio continuă șirul minciunilor.

# Cerință

Care este dimensiunea nasului lui Pinochio după $k$ zile știind că inițial nasul său măsura $n$ centimetri.

# Date de intrare

Din fișierul de intrare `pinochio.in` se citesc valorile $n$, $p$, $k$, care se găsesc pe prima linie a fișierului și sunt separate prin câte un spațiu.


# Date de ieșire


În fișierul de ieșire `pinochio.out` se va afișa pe prima linie un singur număr natural, numărul de centimetri cerut de problemă.


# Restricții și precizări

* $1 \leq n \leq 1 \ 000$;
* $1 \leq k \leq 256$;
* $1 \leq p \leq 100$;

---

Example:
`pinochio.in`
```
2 1 8
```

`pinochio.out`
```
6
```


---------- assistant ----------

Before writing my solution in python, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in python, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:```python
# Required libraries
import numpy as np

# Constants
DAYS_IN_WEEK = 7
WORKING_DAYS = 5

# Reading from the input file
with open('pinochio.in', 'r') as file:
    n, p, k = map(int, file.readline().split())

# Calculate the length of Pinocchio's nose after k days
weeks, remaining_days = divmod(k, DAYS_IN_WEEK)
# Full weeks contribute to the nose growth by p cm for each working day and decrease by 1 cm each weekend day
nose_size_after_full_weeks = n + (weeks * (p * WORKING_DAYS - 2))
# Remaining days contribute to the growth or shrinkage depending on the day of the week
if remaining_days > WORKING_DAYS:
    # If there are more than 5 remaining days, we add growth for 5 days and subtract for the remaining
    remaining_growth = p * WORKING_DAYS - (remaining_days - WORKING_DAYS)
else:
    # If there are 5 or less remaining days, we only have growth
    remaining_growth = p * remaining_days

final_nose_size = nose_size_after_full_weeks + remaining_growth

# Writing to the output file
with open('pinochio.out', 'w') as file:
    file.write(str(final_nose_size))
```

Please note that the solution above has been crafted to be memory efficient and should run within the constraints of the problem (8MB of memory limit). The use of NumPy is not actually necessary for this specific problem since the arithmetic operations used here are quite basic and do not benefit from NumPy's optimizations for large array operations.
---------- user ----------


Program exited with code 1.
stdout:
```

```
stderr:
```
Traceback (most recent call last):
  File "/app/app.py", line 2, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'

```

Think of what has caused the exit code. Use the standard out and standard error to help you understand the issue.
Implement a solution to fix the program

---

Rewrite the entire solution applying necessary fixes.
---------- assistant ----------

The error message indicates that the `numpy` module is not found. This is because the code attempts to import a module that is not being used and is not necessary for the solution. Since the problem does not require any advanced numerical computations where `numpy` would be beneficial, we can simply remove the `numpy` import statement and the code should work fine. Here is the fixed solution without the `numpy` import:

```python
# Constants
DAYS_IN_WEEK = 7
WORKING_DAYS = 5

# Reading from the input file
with open('pinochio.in', 'r') as file:
    n, p, k = map(int, file.readline().split())

# Calculate the length of Pinocchio's nose after k days
weeks, remaining_days = divmod(k, DAYS_IN_WEEK)
# Full weeks contribute to the nose growth by p cm for each working day and decrease by 1 cm each weekend day
nose_size_after_full_weeks = n + (weeks * (p * WORKING_DAYS - 2))
# Remaining days contribute to the growth or shrinkage depending on the day of the week
if remaining_days > WORKING_DAYS:
    # If there are more than 5 remaining days, we add growth for 5 days and subtract for the remaining
    remaining_growth = p * WORKING_DAYS - (remaining_days - WORKING_DAYS)
else:
    # If there are 5 or less remaining days, we only have growth
    remaining_growth = p * remaining_days

final_nose_size = nose_size_after_full_weeks + remaining_growth

# Writing to the output file
with open('pinochio.out', 'w') as file:
    file.write(str(final_nose_size))
```

The above solution should now run without any issues, as it no longer depends on the `numpy` module. It remains efficient in both time and memory usage, respecting the problem constraints.
