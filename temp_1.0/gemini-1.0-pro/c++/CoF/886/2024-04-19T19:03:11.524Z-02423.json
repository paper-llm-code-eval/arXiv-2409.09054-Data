{
  "success": true,
  "attempt": 1,
  "modelDesc": {
    "model": "gemini-1.0-pro",
    "chainOfThought": true,
    "options": {
      "temperature": 1
    }
  },
  "programmingLang": "c++",
  "temperature": 1,
  "chainOfThought": true,
  "depth": 3,
  "logfile": "run-oji/ro/temp_1.0/gemini-1.0-pro/c++/CoF/886/2024-04-19T19:03:11.524Z-02423.log",
  "attemptStart": 1713553391.524,
  "attemptEnd": 1713553474.362,
  "attemptDuration": 82.83800005912781,
  "code": "#include <algorithm>\n#include <cstdint>\n#include <fstream>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nstd::ifstream fin(\"triunghiuri.in\");\nstd::ofstream fout(\"triunghiuri.out\");\n\nint32_t gcd(int32_t x, int32_t y) {\n  int32_t t;\n  while (y != 0) {\n    t = x;\n    x = y;\n    y = t % y;\n  }\n  return x;\n}\n\nint main() {\n  int32_t p;\n  fin >> p;\n  int32_t n;\n  fin >> n;\n\n  if (p == 1) {\n    int32_t x_max = -1;\n    std::vector<int32_t> counters(1001);\n    for (int32_t i = 0; i < n; ++i) {\n      int32_t x;\n      fin >> x;\n      ++counters[x];\n      x_max = std::max(x_max, counters[x]);\n    }\n    fout << x_max << \"\\n\";\n  } else if (p == 2) {\n    std::vector<std::pair<int32_t, int32_t>> points(n);\n    std::unordered_map<int32_t, std::unordered_set<int32_t>> x_to_y;\n\n    int32_t aux;\n    for (auto& [x, y] : points) {\n      fin >> x >> y;\n      x_to_y[x].insert(y);\n      aux = gcd(x, y);\n      x /= aux;\n      y /= aux;\n      x_to_y[x].insert(y);\n      aux = gcd(x + y, y);\n      x = (x + y) / aux;\n      y = y / aux;\n      x_to_y[x].insert(y);\n    }\n\n    int64_t ans = 0;\n    int64_t MODULO = 1000003;\n    for (auto& [x, ys] : x_to_y) {\n      int32_t n_distinct = ys.size();\n      ans += (n_distinct - 1) * n_distinct / 2;\n      ans = ans % MODULO;\n    }\n\n    fout << ans << \"\\n\";\n  }\n\n  return 0;\n}\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 4402,
  "metadata": {
    "id": 886,
    "examples": [
      {
        "in": "1\n5\n2 1\n1 4\n3 4\n3 2\n6 4",
        "out": "2",
        "explainer": ""
      },
      {
        "in": "2\n5\n2 1\n1 4\n3 4\n3 2\n6 4",
        "out": "4",
        "explainer": ""
      }
    ],
    "body": "Se consideră $N$ puncte din plan, având coordonate numere naturale, relativ la un reper cartezian XOY, oricare două puncte fiind distincte.\n\n~[triunghiuri.png]\n\n# Cerință\n\nCunoscând $N$ și coordonatele celor $N$ puncte, să se determine:\n\n1. Numărul maxim de puncte care au aceeași abscisă.\n2. Numărul triunghiurilor care se pot desena respectând următoarele condiții:\n\t* au toate vârfurile în puncte dintre cele date;\n\t* au o latură paralelă cu OX;\n\t* **nu** au laturi paralele cu OY;\n\n# Date de intrare\n\nDatele de intrare se citesc din fișierul `triunghiuri.in`, care are următoarea structură:\n\nPe prima linie se află numărul $p$, care indică cerința ce trebuie rezolvată ($p$ are valoarea $1$ sau $2$);\nPe a doua linie se află numărul natural $N$, reprezentând numărul punctelor date;\nPe următoarele $N$ linii se găsesc câte două valori naturale $x \\ y$, separate prin câte un spațiu, reprezentând coordonatele punctelor date.\n\n# Date de ieșire\n\nFișierul `triunghiuri.out` va avea următoarea structură:\n\nDacă $p = 1$ se va scrie în fișier, pe prima linie, numărul maxim de puncte care au aceeași abscisă (cerința $1$).\nDacă $p = 2$ se va scrie în fișier, pe prima linie, numărul triunghiurilor care se pot desena respectând condițiile date, modulo $1 \\ 000 \\ 003$, adică restul împărțirii numărului de triunghiuri la $1 \\ 000 \\ 003$ (cerința $2$).\n\n# Restricții și precizări\n\n* $3 \\leq N \\leq 100 \\ 000$;\n* $0 \\leq x, y \\leq 1 000$;\n* Se acordă $25$ de puncte pentru rezolvarea corectă a cerinței $1$ și $65$ de puncte pentru rezolvarea corectă a cerinței $2$.",
    "header": {
      "problem_id": 886,
      "problem_name": "triunghiuri",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.3,
      "memory_limit_mb": 4,
      "console_input": false,
      "input_filename": "triunghiuri.in",
      "output_filename": "triunghiuri.out",
      "multiple_solutions": false,
      "original_source": "OJI 2017 VIII: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "6m",
    "filename": {
      "input": "triunghiuri.in",
      "output": "triunghiuri.out"
    },
    "consoleInteraction": false
  }
}