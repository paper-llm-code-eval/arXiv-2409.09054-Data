{
  "success": true,
  "attempt": 4,
  "modelDesc": {
    "model": "gemini-1.0-pro",
    "chainOfThought": true,
    "options": {
      "temperature": 0.2
    }
  },
  "programmingLang": "c++",
  "temperature": 0.2,
  "chainOfThought": true,
  "depth": 2,
  "logfile": "run-oji/ro/temp_0.2/gemini-1.0-pro/c++/CoF/650/2024-04-18T20:44:22.417Z-06425.log",
  "attemptStart": 1713473062.417,
  "attemptEnd": 1713473122.216,
  "attemptDuration": 59.79900002479553,
  "code": "#include <fstream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n  ifstream in(\"yinyang.in\");\n  ofstream out(\"yinyang.out\");\n\n  int n, m;\n  in >> n >> m;\n\n  vector<vector<int>> a(n, vector<int>(m));\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      in >> a[i][j];\n    }\n  }\n\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m - 1; j++) {\n      if (a[i][j] > a[i][j + 1]) {\n        ans++;\n      }\n    }\n  }\n\n  for (int j = 0; j < m; j++) {\n    for (int i = 0; i < n - 1; i++) {\n      if (a[i][j] > a[i + 1][j]) {\n        ans++;\n      }\n    }\n  }\n\n  for (int i = 0; i < n - 1; i++) {\n    if (a[i][m - 1] > a[i + 1][m - 1]) {\n      ans++;\n    }\n  }\n\n  for (int j = 0; j < m - 1; j++) {\n    if (a[n - 1][j] > a[n - 1][j + 1]) {\n      ans++;\n    }\n  }\n\n  out << ans / 2 << endl;\n\n  return 0;\n}\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 2220,
  "metadata": {
    "id": 650,
    "examples": [
      {
        "in": "2 3\n1 2 4\n3 5 6",
        "out": "0",
        "explainer": ""
      },
      {
        "in": "2 3\n6 6 5\n4 6 2",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se dă o matrice $A$ cu $N$ linii și $M$ coloane, cu valori cuprinse între $1$ și $N \\cdot M$ inclusiv, nu neapărat distincte. O **operație** constă în selectarea a două linii sau două coloane consecutive și interschimbarea acestora (swap). O matrice **yin-yang** este o matrice în care $A[i][j] \\geq A[i][j – 1]$, pentru orice pereche $(i, j)$ cu $1 \\leq i \\leq N$ și $2 \\leq j \\leq M$ și $A[i][j] \\geq A[i – 1][j]$, pentru orice pereche $(i, j)$ cu $2 \\leq i \\leq N$ și $1 \\leq j \\leq M$.\n\n# Cerinţă\n\nSă se determine numărul minim de operații necesare pentru a transforma matricea dată într-o matrice yin-yang.\n\n# Date de intrare\n\nÎn fișierul de intrare `yinyang.in` se află scrise pe prima linie numerele naturale $N$ și $M$, cu semnificația din enunț. Pe fiecare dintre următoarele $N$ linii se află câte $M$ numere naturale, reprezentând elementele matricei date $A$. Numerele aflate pe aceeași linie a fișierului sunt separate prin câte un spațiu.\n\n# Date de ieșire\n\nÎn fișierul `yinyang.out` se va scrie numărul minim de operații cerut sau $-1$ dacă nu există soluție.\n\n# Restricții și precizări\n\n* $1 \\leq N, M \\leq 100$;\n* Pentru teste în valoare de $9$ puncte: $1 \\leq N, M \\leq 5$;\n- Pentru alte teste în valoare de $18$ puncte: $N = 1$;\n- Pentru alte teste în valoare de $36$ de puncte elementele din matrice sunt **DISTINCTE**.",
    "header": {
      "problem_id": 650,
      "problem_name": "yinyang",
      "tags": "[Ad hoc, Sorting]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "yinyang.in",
      "output_filename": "yinyang.out",
      "multiple_solutions": false,
      "original_source": "OJI 2019 X: Problema 3"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "yinyang.in",
      "output": "yinyang.out"
    },
    "consoleInteraction": false
  }
}