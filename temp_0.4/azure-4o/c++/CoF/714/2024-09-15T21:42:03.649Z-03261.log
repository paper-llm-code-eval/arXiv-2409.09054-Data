---------- user ----------

Here is a programming challenge. Points will be awarded for fastest code execution.
Create the most efficient solution for this challenge in c++. The code must compile and be correct.
The solution must read from `pinochio.in` and write to `pinochio.out`.
The solution must not use `cin >>` or `cout <<` or `printf()` or `scanf()` to read input data or write output data.

The solution must be written in a markdown code block.

---

În fiecare zi lucrătoare din săptămână, Pinochio spune câte o minciună datorită căreia nasul acestuia crește cu câte $p$ centimetri pe zi. Sâmbăta și duminica, când vine bunicul Gepeto acasă, pentru a nu-l supăra prea tare, Pinochio reușește să nu spună nici o minciună, ba chiar uitându-se în oglindă observă că în fiecare din aceste zile lungimea nasului său scade cu câte $1$ centimetru pe zi. Când începe o nouă săptămână, rămânând singur acasă Pinochio continuă șirul minciunilor.

# Cerință

Care este dimensiunea nasului lui Pinochio după $k$ zile știind că inițial nasul său măsura $n$ centimetri.

# Date de intrare

Din fișierul de intrare `pinochio.in` se citesc valorile $n$, $p$, $k$, care se găsesc pe prima linie a fișierului și sunt separate prin câte un spațiu.


# Date de ieșire


În fișierul de ieșire `pinochio.out` se va afișa pe prima linie un singur număr natural, numărul de centimetri cerut de problemă.


# Restricții și precizări

* $1 \leq n \leq 1 \ 000$;
* $1 \leq k \leq 256$;
* $1 \leq p \leq 100$;

---

Example:
`pinochio.in`
```
2 1 8
```

`pinochio.out`
```
6
```


---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:To solve this problem efficiently, we need to simulate the growth and reduction of Pinochio's nose over a given number of days. Let's break down the steps:

1. **Read Input**: We'll read the initial length of the nose `n`, the daily growth `p`, and the total number of days `k` from the input file `pinochio.in`.
2. **Simulate the Days**:
   - For each day, determine if it's a weekday or a weekend.
   - If it's a weekday (Monday to Friday), the nose grows by `p` centimeters.
   - If it's a weekend (Saturday or Sunday), the nose shrinks by 1 centimeter.
3. **Write Output**: After simulating all `k` days, write the final length of the nose to the output file `pinochio.out`.

Given the constraints, this approach will be efficient. We will iterate through the days and update the length of the nose accordingly.

Here's the C++ code implementing this logic:

```cpp
#include <fstream>

int main() {
    std::ifstream infile("pinochio.in");
    std::ofstream outfile("pinochio.out");

    int n, p, k;
    infile >> n >> p >> k;

    int nose_length = n;

    for (int day = 0; day < k; ++day) {
        int day_of_week = day % 7;
        if (day_of_week < 5) { // Monday to Friday
            nose_length += p;
        } else { // Saturday and Sunday
            nose_length -= 1;
        }
    }

    outfile << nose_length << std::endl;

    infile.close();
    outfile.close();

    return 0;
}
```

### Explanation:
1. **Reading Input**: We use `std::ifstream` to read from `pinochio.in` and extract the values `n`, `p`, and `k`.
2. **Simulating the Days**:
   - We loop from `0` to `k-1` to simulate each day.
   - `day % 7` gives us the day of the week (0 for Monday, 1 for Tuesday, ..., 6 for Sunday).
   - If the day is a weekday (`day_of_week < 5`), we increase the nose length by `p`.
   - If the day is a weekend (`day_of_week >= 5`), we decrease the nose length by `1`.
3. **Writing Output**: We use `std::ofstream` to write the final nose length to `pinochio.out`.

This solution is efficient and straightforward, ensuring that we correctly simulate the growth and reduction of Pinochio's nose over the specified number of days.
