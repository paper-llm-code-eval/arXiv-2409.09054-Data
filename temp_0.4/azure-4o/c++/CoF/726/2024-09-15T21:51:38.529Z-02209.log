---------- user ----------

Here is a programming challenge. Points will be awarded for fastest code execution.
Create the most efficient solution for this challenge in c++. The code must compile and be correct.
The solution must read from `concurs.in` and write to `concurs.out`.
The solution must not use `cin >>` or `cout <<` or `printf()` or `scanf()` to read input data or write output data.

The solution must be written in a markdown code block.

---

La un concurs de matematică participă elevi din mai multe școli din diferite orașe. Pentru a se putea deosebi între ele lucrările lor, fiecare lucrare este codificată printr-un număr natural cu 3 cifre, să zicem $abc$, unde $a$ (cifra sutelor) este codul orașului, $b$ (cifra zecilor) este codul școlii din orașul $a$, iar $c$ (cifra unităților) este codul unui elev din școala $b$ din orașul $a$. Exemplu: lucrarea cu codul $328$ este lucrarea elevului cu codul $8$ de la școala cu codul $2$ din orașul cu codul $3$.
Se cunosc: un cod (al lucrării unui elev $H$, prietenul nostru), numărul $n$ de lucrări premiate și codurile acestora.

# Cerință

Se cere să se rezolve cerințele:

1. Verificați dacă $H$ este premiant, sau nu.
2. Determinați numărul de premii luate de elevii din orașul lui $H$ (inclusiv $H$, dacă a fost premiat).
3. Determinați numărul de premii luate de elevii din școala lui $H$ (inclusiv $H$, dacă a fost premiat).

# Date de intrare


De pe prima linie a fișierului de intrare `concurs.in` se citește codul lui $H$; de pe linia a doua a fișierului se citește valoarea $n$, iar de pe linia a treia se citesc cele $n$ coduri premiate. Codurile premiate sunt separate prin câte un spațiu.


# Date de ieșire


Cele 3 răspunsuri se vor afișa în fișierul de ieșire `concurs.out`, pe câte o linie. Pentru prima cerință se va afișa pe prima linie a fișierului un mesaj (`DA` sau `NU`), după cum $H$ a luat, sau nu a luat premiu. La cerințele 2 și 3 se va scrie câte un număr pe linia a doua respectiv pe linia a treia a fișierului de ieșire.


# Restricții și precizări

* $1 \leq n \leq 20$
* Codurile de oraș (cifra sutelor din fiecare cod) sunt de la $1$ la $5$, inclusiv.
* Codurile școlilor din fiecare oraș (cifra zecilor) sunt de la $0$ la $9$, inclusiv.
* Codurile elevilor (cifra unităților) sunt tot de la $0$ la $9$ inclusiv.
* Se acordă $30\%$ din punctaj pentru prima cerință rezolvată corect, $70\%$ din punctaj pentru primele două cerințe rezolvate corect și punctajul integral pentru toate cele $3$ cerințe rezolvate corect.

---

Example:
`concurs.in`
```
234
6
123 232 125 222 421 235
```

`concurs.out`
```
NU
3
2
```


---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:```cpp
#include <fstream>
#include <vector>
#include <string>

int main() {
    std::ifstream fin("concurs.in");
    std::ofstream fout("concurs.out");

    int H, n;
    fin >> H >> n;

    std::vector<int> codes(n);
    for (int i = 0; i < n; ++i) {
        fin >> codes[i];
    }

    // Extract city and school codes from H
    int cityH = H / 100;
    int schoolH = (H / 10) % 10;

    // Check if H is a winner
    bool isWinner = false;
    int cityCount = 0;
    int schoolCount = 0;

    for (int code : codes) {
        if (code == H) {
            isWinner = true;
        }
        int city = code / 100;
        int school = (code / 10) % 10;
        if (city == cityH) {
            ++cityCount;
        }
        if (city == cityH && school == schoolH) {
            ++schoolCount;
        }
    }

    fout << (isWinner ? "DA" : "NU") << "\n";
    fout << cityCount << "\n";
    fout << schoolCount << "\n";

    fin.close();
    fout.close();

    return 0;
}
```

This C++ program reads the input from the file `concurs.in`, processes the data to determine if the student H is a winner, counts the number of winners from the same city and the same school as H, and writes the results to the file `concurs.out`.

### Explanation:

1. **Reading Input:**
   - The code reads the input file `concurs.in`.
   - It reads the code of student H and the number of awarded codes n.
   - It then reads the n awarded codes into a vector.

2. **Extracting City and School Codes:**
   - The city code of H is extracted by dividing H by 100.
   - The school code of H is extracted by dividing H by 10 and taking the remainder when divided by 10.

3. **Processing Awarded Codes:**
   - It checks if H is among the awarded codes.
   - It counts how many awarded codes belong to the same city as H.
   - It counts how many awarded codes belong to the same school as H.

4. **Writing Output:**
   - It writes "DA" if H is a winner, otherwise "NU".
   - It writes the count of awarded codes from the same city.
   - It writes the count of awarded codes from the same school.

This solution efficiently processes the input and generates the required output, ensuring that it meets the constraints and requirements of the problem.
