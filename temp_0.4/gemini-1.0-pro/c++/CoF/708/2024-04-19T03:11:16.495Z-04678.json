{
  "success": true,
  "attempt": 1,
  "modelDesc": {
    "model": "gemini-1.0-pro",
    "chainOfThought": true,
    "options": {
      "temperature": 0.4
    }
  },
  "programmingLang": "c++",
  "temperature": 0.4,
  "chainOfThought": true,
  "depth": 2,
  "logfile": "run-oji/ro/temp_0.4/gemini-1.0-pro/c++/CoF/708/2024-04-19T03:11:16.495Z-04678.log",
  "attemptStart": 1713496276.495,
  "attemptEnd": 1713496312.879,
  "attemptDuration": 36.384000062942505,
  "code": "#include <fstream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nifstream fin(\"anagrame.in\");\nofstream fout(\"anagrame.out\");\nchar s[11];\nint n;\nvoid afis() {\n  for (int i = 1; i <= n; i++) fout << s[i];\n  fout << '\\n';\n}\nvoid back(int k) {\n  if (k == n) afis();\n  else {\n    for (int i = k; i <= n; i++) {\n      if (i > k && s[i] == s[i - 1]) continue;\n      swap(s[k], s[i]);\n      back(k + 1);\n      swap(s[k], s[i]);\n    }\n  }\n}\nint main() {\n  fin >> s + 1;\n  n = strlen(s + 1);\n  sort(s + 1, s + n + 1);\n  back(1);\n  return 0;\n}\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1886,
  "metadata": {
    "id": 708,
    "examples": [
      {
        "in": "ana",
        "out": "aan\nana\nnaa",
        "explainer": ""
      }
    ],
    "body": "Se dă un cuvânt format numai din litere mici. Numim anagramă un cuvânt format din literele cuvântului dat, schimbând eventual ordinea literelor. De exemplu o anagramă a cuvântului tamara este cuvântul armata. Evident, un cuvânt poate fi considerat o anagramă a lui însuşi.\n\n# Cerință\n\nScrieţi un program care să genereze toate anagramele unui cuvânt dat, în ordine lexicografică.\n\n# Date de intrare\n\nFişierul de intrare `anagrame.in` conţine pe prima linie cuvântul dat.\n\n\n# Date de ieșire\n\nFişierul de ieşire `anagrame.out` va conţine în ordine anagramele cuvântului dat, câte una pe linie.\n\n# Restricții și precizări\n\n* Cuvântul dat are cel mult $10$ litere mici.\n* Cuvântul $x = x_1 \\ x_2 \\dots x_n$ precede cuvântul $y = y_1 \\ y_2 \\dots y_n$ dacă există un indice $k \\in {1, 2, \\dots, n}$ astfel încât $x_i = y_i$, $i \\in {1, 2, \\dots, k - 1}$, iar litera $x_k$ precede în alfabet litera $y_k$.",
    "header": {
      "problem_id": 708,
      "problem_name": "anagrame",
      "tags": "[Brute Force]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.5,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "anagrame.in",
      "output_filename": "anagrame.out",
      "multiple_solutions": false,
      "original_source": "OJI 2002 VIII: Problema 2 (Modificată)"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "anagrame.in",
      "output": "anagrame.out"
    },
    "consoleInteraction": false
  }
}