---------- user ----------

Here is a programming challenge. Points will be awarded for fastest code execution.
Create the most efficient solution for this challenge in c++. The code must compile and be correct.
The solution must read from `lascoala.in` and write to `lascoala.out`.
The solution must not use `cin >>` or `cout <<` or `printf()` or `scanf()` to read input data or write output data.

The solution must be written in a markdown code block.

---

Directorul unei școli dorește să premieze la sfârșitul anului școlar pe cei mai buni elevi la învățătură. Pentru acest lucru el are de rezolvat două probleme:

1. Să determine câți elevi vor fi premiați dintre cei $n$ elevi ai școlii. După discuții aprinse cu ceilalți profesori se hotărăște în Consiliul Profesoral ca numărul premianților să fie $n - k$, unde $k$ este cel mai mare număr pătrat perfect mai mic strict decât $n$. De exemplu, pentru $n = 150$, $k$ este $144$ (pentru că $144$ = $12^2$), deci vor fi premiați $150 - 144 = 6$ elevi.
2. Pentru a fi cât mai multă liniște la premiere, în Consiliul Profesoral se ia decizia ca elevii care nu vor fi premiați să fie așezați pe terenul de sport pe rânduri de câte $p$ elevi (unde $p^2 = k$). În acest scop, directorul a numerotat elevii nepremiați de la $1$ la $k$ și a hotărât ca elevii să fie așezați în ordinea descrescătoare a numerelor asociate.

# Cerință

Scrieți un program care citește $n$, numărul de elevi din școală și calculează numărul de elevi premiați precum și modul de așezare a elevilor nepremiați.

# Date de intrare


Fișierul de intrare `lascoala.in` va conține numărul $n$.


# Date de ieșire

Fișierul de ieșire `lascoala.out` va conține pe prima linie numărul de elevi premiați, iar pe următoarele linii așezarea elevilor nepremiați.


# Restricții și precizări

* $2 \leq n \leq 700$;

---

Example:
`lascoala.in`
```
35
```

`lascoala.out`
```
10
25 24 23 22 21
20 19 18 17 16
15 14 13 12 11
10 9 8 7 6
5 4 3 2 1
```


---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:Here is the complete C++ code to solve the problem. The program reads the number of students `n` from the input file `lascoala.in` and writes the number of students to be awarded and the seating arrangement of the non-awarded students to the output file `lascoala.out`.

```cpp
#include <fstream>
#include <cmath>
#include <vector>

int main() {
    std::ifstream infile("lascoala.in");
    std::ofstream outfile("lascoala.out");

    int n;
    infile >> n;

    // Determine the largest perfect square less than n.
    int p = static_cast<int>(std::sqrt(n - 1));
    int k = p * p;

    // Number of students to be awarded.
    int num_awarded = n - k;
    outfile << num_awarded << "\n";

    // Arrange the non-awarded students.
    std::vector<int> non_awarded_students(k);
    for (int i = 0; i < k; ++i) {
        non_awarded_students[i] = k - i;
    }

    // Output the non-awarded students in rows of p.
    for (int i = 0; i < k; ++i) {
        outfile << non_awarded_students[i];
        if ((i + 1) % p == 0) {
            outfile << "\n";
        } else {
            outfile << " ";
        }
    }

    return 0;
}
```

### Explanation:
1. **Reading Input**:
    - The program reads the integer `n` from the file `lascoala.in`.

2. **Finding the Largest Perfect Square Less Than `n`**:
    - Calculate the largest integer `p` such that `p*p` is less than `n` using `sqrt(n - 1)`.

3. **Calculating Number of Awarded Students**:
    - The number of awarded students is `n - k` where `k = p * p`.

4. **Creating the List of Non-Awarded Students**:
    - A vector `non_awarded_students` is filled with numbers from `k` down to `1`.

5. **Output**:
    - First, the number of awarded students is written to the file.
    - Then, the non-awarded students are written in lines with `p` students per line.

### Example:
For `n = 35`:
- `p` is calculated as `5` because `5*5 = 25` is the largest perfect square less than `35`.
- `k` is `25`.
- The number of awarded students is `35 - 25 = 10`.
- The non-awarded students are `[25, 24, ..., 1]` and arranged in rows of `5`.

The output will be:
```
10
25 24 23 22 21
20 19 18 17 16
15 14 13 12 11
10 9 8 7 6
5 4 3 2 1
```
