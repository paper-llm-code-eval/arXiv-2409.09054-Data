{
  "success": true,
  "attempt": 0,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 0,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/793/2024-05-22T10:50:55.359Z-02292.log",
  "attemptStart": 1716375055.359,
  "attemptEnd": 1716375070.218,
  "attemptDuration": 14.858999967575073,
  "code": "def read_livada_input(filename):\n    with open(filename, 'r') as file:\n        m, n, p = map(int, file.readline().split())\n        orchard = [list(map(int, file.readline().split())) for _ in range(m)]\n    return m, n, p, orchard\n\ndef write_livada_output(filename, rows_with_majority, max_consecutive):\n    with open(filename, 'w') as file:\n        file.write(f\"{rows_with_majority}\\n{max_consecutive}\\n\")\n\ndef find_majority_soil(orchard_row, n):\n    count = {}\n    for fruit in orchard_row:\n        if fruit in count:\n            count[fruit] += 1\n        else:\n            count[fruit] = 1\n        if count[fruit] > n // 2:\n            return True\n    return False\n\ndef find_max_consecutive_soil(orchard_row):\n    max_consecutive = current = 1\n    for i in range(1, len(orchard_row)):\n        if orchard_row[i] == orchard_row[i-1]:\n            current += 1\n            max_consecutive = max(max_consecutive, current)\n        else:\n            current = 1\n    return max_consecutive\n\ndef process_livada(m, n, orchard):\n    rows_with_majority = 0\n    max_consecutive = 0\n    for row in orchard:\n        if find_majority_soil(row, n):\n            rows_with_majority += 1\n        max_consecutive = max(max_consecutive, find_max_consecutive_soil(row))\n    return rows_with_majority, max_consecutive\n\ndef main():\n    m, n, p, orchard = read_livada_input('livada.in')\n    rows_with_majority, max_consecutive = process_livada(m, n, orchard)\n    write_livada_output('livada.out', rows_with_majority, max_consecutive)\n\nif __name__ == \"__main__\":\n    main()\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1572,
  "metadata": {
    "id": 793,
    "examples": [
      {
        "in": "4 7 9\n2 1 2 3 8 2 2\n4 7 2 4 9 7 4\n5 5 2 5 5 5 7\n2 3 2 3 2 3 1",
        "out": "2\n3",
        "explainer": ""
      }
    ],
    "body": "Norocosul Gigel tocmai a primit în dar de la bunicul său, Nelu, o imensă plantaţie de pomi fructiferi. Fost profesor de geometrie, Nelu a plantat în mod riguros pomii fructiferi pe $m$ rânduri paralele, iar pe fiecare rând a plantat exact câte $n$ pomi fructiferi. Însă, din motive mai mult sau mai puţin obiective, domnul Nelu nu a plantat pe fiecare rând toţi pomii de acelaşi soi, ci din mai multe soiuri diferite. Soiurile de pomi plantaţi în livadă sunt codificate cu numere naturale cuprinse între $1$ şi $p$.\nCuprins de febra rigurozităţii matematice şi de cea a statisticii, Gigel a definit noţiunea de *soi majoritar* astfel: dacă pe un rând $k$ format din $n$ pomi fructiferi avem cel puţin $\\lfloor n/2 \\rfloor + 1$ pomi de acelaşi soi $x$, atunci spunem că *soiul $x$ este soi majoritar pe rândul $k$ (prin $\\lfloor y \\rfloor$ se înţelege partea întreagă a numărului real $y$)*.\n\n# Cerință\n\nCunoscând numerele $m, n$ şi $p$, precum şi soiul fiecărui pom de pe fiecare rând al plantaţiei, ajutaţi-l pe Gigel să determine:\n\n* pe câte rânduri din livadă există un soi majoritar;\n* care este cel mai mare număr de pomi de acelaşi soi plantaţi în poziţii consecutive pe un rând.\n\n# Date de intrare\n\n\nFişierul de intrare `livada.in` conţine pe prima linie trei numere naturale $m, n$ şi $p$ cu semnificaţia din enunţ, iar pe fiecare dintre următoarele $m$ linii se găsesc câte $n$ numere, despărţite prin câte un spaţiu, reprezentând soiurile pomilor de pe rândul respectiv.\n\n\n# Date de ieșire\n\n\nFişierul de ieşire `livada.out` va conţine două linii:\n\n* pe prima linie se va scrie un număr natural reprezentând numărul de rânduri din livadă pe care există un soi majoritar;\n* pe a doua linie se va scrie un număr natural reprezentând cel mai mare numar de pomi de acelasi soi plantaţi în poziţii consecutive pe un rând.\n\n\n# Restricții și precizări\n\n* $1 \\leq m \\leq 100$;\n* $1 \\leq n \\leq 700 \\ 000$;\n* $1 \\leq m \\cdot n \\leq 700 \\ 000$;\n* $1 \\leq p \\leq 998 \\ 560 \\ 000$;\n* Pe fiecare rând diferenţa dintre valoarea maximă şi cea minimă este cel mult $250 \\ 000$.\n* Dacă doar valoarea de pe prima linie este corectă, se acordă $40$% din punctaj. Dacă doar valoarea de pe a doua linie este corectă, se acordă $60$% din punctaj. Dacă ambele valori sunt corecte, se acordă $100$% din punctajul testului respectiv.",
    "header": {
      "problem_id": 793,
      "problem_name": "livada",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.1,
      "memory_limit_mb": 8,
      "console_input": false,
      "input_filename": "livada.in",
      "output_filename": "livada.out",
      "multiple_solutions": true,
      "original_source": "OJI 2010 IX: Problema 1"
    },
    "maxTimeSec": 1,
    "maxMemMB": "8m",
    "filename": {
      "input": "livada.in",
      "output": "livada.out"
    },
    "consoleInteraction": false
  }
}