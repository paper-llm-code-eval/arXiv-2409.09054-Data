---------- user ----------

Here is a programming challenge. Points will be awarded for fastest code execution.
Create the most efficient solution for this challenge in python. The code must compile and be correct.
The solution must read from `eq4.in` and write to `eq4.out`.
The solution must not use `input()` or `print()` to read input data or write output data.

The solution must be written in a markdown code block.

---

Se dă o expresie matematică în care pot să apară literele `x`, `y`, `z`, `t`, cifre și semnele `+` sau `-`.

Cifrele alăturate formează numere. Literele reprezintă variabile. O variabilă poate fi precedată de un număr. Între variabilă și numărul care o precede nu există alte caractere. Un grup format dintr-o literă și, eventual, un număr care o precede formează un monom. Un monom **nu** conține mai multe litere. Numărul care apare într-un monom se numește coeficient.

Expresia poate să conțină și numere care nu sunt urmate de o variabilă. Aceste numere se numesc termeni liberi. 

Expresia este deci alcătuită din monoame și termeni liberi. Fiecare monom și fiecare termen liber este precedat de unul dintre semnele `+` sau `-`.

Exemple:

| Expresii corecte | Expresii incorecte |
| - | ------- |
| `-x+100`  | `x+100` (`x` nu este precedat de `+` sau `-`)   |
| `+3x+2y-3z+7x-15-3+8z-7y`  | `+x+y-3zt` (`3zt` nu este monom, deoarece conţine două litere) |
| `+10x-7y+3x-7+5z-8t-z-x-y+3` | `-x + y -34*t + 5z - 5u` (în expresie apar caractere nepermise, în acest caz spații, litera `u` și semnul `*`)|

Valoarea matematică a unei expresii este valoarea care se obține dacă înlocuim literele care apar în expresie cu valori numerice și efectuăm calculele. Valoarea unui monom se obține înmulțind coeficientul monomului cu valoarea pe care o are variabila care apare în respectivul monom. De exemplu, valoarea expresiei `+3x` pentru $x=2$ este $6$.

# Cerință

Fiind dată o expresie corectă, să se determine:

1. valoarea matematică a expresiei dacă $x$, $y$, $z$ și $t$ au valoarea $1$.
2. numărul de cvartete distincte $(x, y, z, t)$, de valori întregi care aparțin unui interval dat $[a, b]$, pentru care expresia matematică corespunzătoare expresiei date este egală cu o valoare dată $E$. Două cvartete sunt distincte dacă există cel puţin o poziţie pentru care valorile corespunzătoare sunt diferite.

# Date de intrare


Datele de intrare se citesc din fişierul `eq4.in`, care are următoarea structură:

* pe prima linie se află numărul natural $C$, care poate fi egal cu $1$ sau $2$, în funcţie de cerinţa ce trebuie rezolvată
* pe a doua linie se află expresia dată
* pe a treia linie se află valorile $a \ b \ E$, separate prin câte un spațiu.

# Date de ieșire


Datele de ieşire se vor scrie în fişierul `eq4.out` astfel:

* Dacă $C=1$, pe prima linie se va scrie răspunsul la cerința $1$
* Dacă $C=2$, pe prima linie se va scrie răspunsul la cerința $2$.

# Restricții și precizări

* coeficienţii sunt numere naturale, având cel mult $4$ cifre
* $1 \leq$ lungimea expresiei $\leq 100 \ 000$
* $-500 \leq a \leq b \leq 500$
* $-10^{15} \leq E \leq 10^{15}$
* În cel puțin $30\%$ dintre teste, în expresia dată apar cel mult trei dintre literele `x`, `y`, `z` sau `t`.
* Se acordă $10$ puncte din oficiu.

| $C$ | Punctaj |
| - | ------- |
| $1$ | 20      |
| $2$ | 70      |

---

Example:
`eq4.in`
```
1
+10x-7y+3x-7+5z-8t-z-x-y+3
-1 1 0
```

`eq4.out`
```
-4
```


---------- assistant ----------

Before writing my solution in python, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in python, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:```python
# Read from eq4.in
with open('eq4.in', 'r') as file:
    C = int(file.readline().strip())
    expression = file.readline().strip()
    a, b, E = map(int, file.readline().split())

# Function to parse the expression and return coefficients
def parse_expression(expr):
    # Dictionary to hold coefficients
    coeff = {'x': 0, 'y': 0, 'z': 0, 't': 0, 'const': 0}
    # Parse the expression
    term = ''
    sign = 1
    for char in expr:
        if char in '+-':
            if term:
                if term[-1].isalpha():
                    coeff[term[-1]] += sign * int(term[:-1] or '1')
                else:
                    coeff['const'] += sign * int(term)
            term = ''
            sign = 1 if char == '+' else -1
        else:
            term += char
    if term:
        if term[-1].isalpha():
            coeff[term[-1]] += sign * int(term[:-1] or '1')
        else:
            coeff['const'] += sign * int(term)
    return coeff

# Function to solve for C=1
def solve_for_c1(coefficients):
    # Evaluate the expression with all variables set to 1
    return sum(coefficients.values())

# Function to solve for C=2
def solve_for_c2(coefficients, a, b, E):
    count = 0
    for x in range(a, b+1):
        for y in range(a, b+1):
            for z in range(a, b+1):
                for t in range(a, b+1):
                    if (coefficients['x']*x + coefficients['y']*y +
                        coefficients['z']*z + coefficients['t']*t +
                        coefficients['const'] == E):
                        count += 1
    return count

# Parse the expression
coefficients = parse_expression(expression)

# Output solution to eq4.out
with open('eq4.out', 'w') as file:
    if C == 1:
        result = solve_for_c1(coefficients)
    elif C == 2:
        result = solve_for_c2(coefficients, a, b, E)
    
    file.write(str(result) + '\n')
```

This Python code snippet reads the input from `eq4.in`, parses the input expression, and writes the output to `eq4.out` based on the value of `C`. For `C=1`, it calculates the expression value when all variables are set to `1`. For `C=2`, it counts all distinct quadruplets `(x, y, z, t)` within the interval `[a, b]` that make the expression equal to `E`.
