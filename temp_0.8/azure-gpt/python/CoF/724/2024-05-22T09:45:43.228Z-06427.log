---------- user ----------

Here is a programming challenge. Points will be awarded for fastest code execution.
Create the most efficient solution for this challenge in python. The code must compile and be correct.
The solution must read from `reactivi.in` and write to `reactivi.out`.
The solution must not use `input()` or `print()` to read input data or write output data.

The solution must be written in a markdown code block.

---

Într-un laborator de analize chimice se utilizează $N$ reactivi. Se știe că, pentru a evita accidentele sau deprecierea reactivilor, aceștia trebuie să fie stocați în condiții de mediu speciale. Mai exact, pentru fiecare reactiv $x$, se precizează intervalul de temperatură $[min_x, max_x]$ în care trebuie să se încadreze temperatura de stocare a acestuia.

Reactivii vor fi plasați în frigidere. Orice frigider are un dispozitiv cu ajutorul căruia putem stabili temperatura (constantă) care va fi in interiorul acelui frigider (exprimată într-un număr întreg de grade Celsius).

# Cerință
Scrieți un program care să determine numărul minim de frigidere necesare pentru stocarea reactivilor chimici.

# Date de intrare
Fișierul de intrare `reactivi.in` conține:
- pe prima linie numărul natural $N$, care reprezintă numărul de reactivi;
- pe fiecare dintre următoarele $N$ linii se află $min$ și $max$, două numere întregi separate printr-un spațiu; numerele de pe linia $x+1$ din fișier reprezintă temperatura minimă, respectiv temperatura maximă de stocare a reactivului $x$.

# Date de ieșire
Fișierul de ieșire `reactivi.out` va conține o singură linie pe care este scris numărul minim de frigidere necesar.

# Restricții și precizări
- $1 \leq N \leq 8\ 000$
- $-100 \leq min_x \leq max_x \leq 100$ (numere întregi, reprezentând grade Celsius), pentru orice $x$ de la $1$ la $N$
- Un frigider poate conține un număr nelimitat de reactivi.

---

Example:
`reactivi.in`
```
3
-10 10
-2 5
20 50
```

`reactivi.out`
```
2
```


---------- assistant ----------

Before writing my solution in python, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in python, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:```python
# Read the list of reagents from reactivi.in
with open('reactivi.in', 'r') as file:
    N = int(file.readline().strip())
    reagents = [tuple(map(int, file.readline().split())) for _ in range(N)]

# Sort the reagents by their maximum storage temperature
reagents.sort(key=lambda x: x[1])

# Determine the minimum number of fridges needed
fridges = 0
current_max_temp = -101  # Initialize with a temperature lower than the minimum possible

for min_temp, max_temp in reagents:
    if min_temp > current_max_temp:
        # We need a new fridge whenever the minimum temperature of the current reagent
        # is higher than the maximum temperature of the last fridge
        fridges += 1
        current_max_temp = max_temp

# Write the result to reactivi.out
with open('reactivi.out', 'w') as file:
    file.write(str(fridges) + '\n')
```

Explanation of the algorithm:
1. We sort the reagents by their maximum storage temperature. This way, when we iterate over the sorted list, we can be sure that if a reagent doesn't fit in the current temperature range, it will not fit in any of the previous ranges either.
2. For each reagent, we check if its minimum storage temperature is greater than the maximum temperature of the current fridge. If it is, we need a new fridge, and we update the current fridge's maximum temperature to the current reagent's maximum temperature.
3. We count the number of new fridges we need, which gives us the minimum number of fridges required to store all reagents.
4. We write the result to the output file.
