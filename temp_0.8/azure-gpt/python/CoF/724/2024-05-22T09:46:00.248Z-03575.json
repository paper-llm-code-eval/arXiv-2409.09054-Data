{
  "success": true,
  "attempt": 2,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 2,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/724/2024-05-22T09:46:00.248Z-03575.log",
  "attemptStart": 1716371160.248,
  "attemptEnd": 1716371194.928,
  "attemptDuration": 34.6800000667572,
  "code": "# Define functions to read from and write to files\ndef read_input(filename):\n    with open(filename, 'r') as file:\n        N = int(file.readline().strip())\n        intervals = [tuple(map(int, file.readline().split())) for _ in range(N)]\n    return intervals\n\ndef write_output(filename, fridges_count):\n    with open(filename, 'w') as file:\n        file.write(str(fridges_count))\n\ndef min_fridges_required(intervals):\n    # Sort the intervals based on their maximum temperature\n    intervals.sort(key=lambda x: x[1])\n    fridges_count = 0\n    current_max_temp = -101  # Initialize with a temperature lower than the minimum possible\n\n    for interval in intervals:\n        if interval[0] > current_max_temp:\n            # Start a new fridge if the current reagent's minimum temperature is higher than the current max temperature\n            fridges_count += 1\n            current_max_temp = interval[1]\n\n    return fridges_count\n\n# Main function to tie the logic together\ndef main():\n    intervals = read_input('reactivi.in')\n    fridges_count = min_fridges_required(intervals)\n    write_output('reactivi.out', fridges_count)\n\n# Invoke the main function\nif __name__ == '__main__':\n    main()\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1589,
  "metadata": {
    "id": 724,
    "examples": [
      {
        "in": "3\n-10 10\n-2 5\n20 50",
        "out": "2",
        "explainer": ""
      },
      {
        "in": "4\n2 5\n5 7\n10 20\n30 40",
        "out": "3",
        "explainer": ""
      },
      {
        "in": "5\n-10 10\n10 12\n-20 10\n7 10\n7 8",
        "out": "2",
        "explainer": ""
      }
    ],
    "body": "Într-un laborator de analize chimice se utilizează $N$ reactivi. Se știe că, pentru a evita accidentele sau deprecierea reactivilor, aceștia trebuie să fie stocați în condiții de mediu speciale. Mai exact, pentru fiecare reactiv $x$, se precizează intervalul de temperatură $[min_x, max_x]$ în care trebuie să se încadreze temperatura de stocare a acestuia.\n\nReactivii vor fi plasați în frigidere. Orice frigider are un dispozitiv cu ajutorul căruia putem stabili temperatura (constantă) care va fi in interiorul acelui frigider (exprimată într-un număr întreg de grade Celsius).\n\n# Cerință\nScrieți un program care să determine numărul minim de frigidere necesare pentru stocarea reactivilor chimici.\n\n# Date de intrare\nFișierul de intrare `reactivi.in` conține:\n- pe prima linie numărul natural $N$, care reprezintă numărul de reactivi;\n- pe fiecare dintre următoarele $N$ linii se află $min$ și $max$, două numere întregi separate printr-un spațiu; numerele de pe linia $x+1$ din fișier reprezintă temperatura minimă, respectiv temperatura maximă de stocare a reactivului $x$.\n\n# Date de ieșire\nFișierul de ieșire `reactivi.out` va conține o singură linie pe care este scris numărul minim de frigidere necesar.\n\n# Restricții și precizări\n- $1 \\leq N \\leq 8\\ 000$\n- $-100 \\leq min_x \\leq max_x \\leq 100$ (numere întregi, reprezentând grade Celsius), pentru orice $x$ de la $1$ la $N$\n- Un frigider poate conține un număr nelimitat de reactivi.",
    "header": {
      "problem_id": 724,
      "problem_name": "reactivi",
      "tags": "[Greedy]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.24,
      "memory_limit_mb": 4,
      "console_input": false,
      "input_filename": "reactivi.in",
      "output_filename": "reactivi.out",
      "multiple_solutions": false,
      "original_source": "OJI 2004 IX: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "6m",
    "filename": {
      "input": "reactivi.in",
      "output": "reactivi.out"
    },
    "consoleInteraction": false
  }
}