{
  "success": true,
  "attempt": 4,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 1,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/836/2024-05-22T11:23:47.242Z-01949.log",
  "attemptStart": 1716377027.242,
  "attemptEnd": 1716377068.248,
  "attemptDuration": 41.00599980354309,
  "code": "def calculate_max_power(N, nums):\n    stack = []\n    left_count = [0] * N\n    right_count = [0] * N\n\n    # Calculate number of elements to the left which are less than current\n    for i in range(N):\n        while stack and nums[stack[-1]] < nums[i]:\n            stack.pop()\n        left_count[i] = i - stack[-1] if stack else i + 1\n        stack.append(i)\n\n    # Clear stack for reuse\n    stack.clear()\n\n    # Calculate number of elements to the right which are less than current\n    for i in range(N - 1, -1, -1):\n        while stack and nums[stack[-1]] < nums[i]:\n            stack.pop()\n        right_count[i] = stack[-1] - i if stack else N - i\n        stack.append(i)\n\n    # Calculate powers and track the maximum\n    max_power = 0\n    element_count = 0\n    for i in range(N):\n        power = left_count[i] * right_count[i]\n        if power > max_power:\n            max_power = power\n            element_count = 1\n        elif power == max_power:\n            element_count += 1\n\n    return max_power, element_count\n\n# Read from maxp.in and write the output to maxp.out\nwith open('maxp.in', 'r') as file_in:\n    N = int(file_in.readline().strip())\n    nums = list(map(int, file_in.readline().strip().split()))\n\nmax_power, element_count = calculate_max_power(N, nums)\n\nwith open('maxp.out', 'w') as file_out:\n    file_out.write(f\"{max_power}\\n{element_count}\\n\")\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1997,
  "metadata": {
    "id": 836,
    "examples": [
      {
        "in": "7\n9 3 4 5 1 2 2",
        "out": "12\n1",
        "explainer": ""
      },
      {
        "in": "6\n1 0 7 7 2 6",
        "out": "3\n2",
        "explainer": ""
      }
    ],
    "body": "Considerăm un șir de numere $a_1, a_2, \\dots, a_N$. O secvență nevidă în acest șir este de forma $a_i, a_{i+1}, \\dots, a_j$, unde $i \\leq j$. De exemplu, pentru $N = 4$ și șirul $2 \\ 3 \\ 4 \\ 3$, secvențele nevide sunt: $2, 2 \\ 3, 2 \\ 3 \\ 4, 2 \\ 3 \\ 4 \\ 3, 3, 3 \\ 4, 3 \\ 4 \\ 3, 4, 4 \\ 3, 3$. Definim puterea unui element $a_i$ ca fiind numărul de secvențe care-l conțin pe $a_i$ și în care $a_i$ este strict mai mare decât celelalte elemente ale fiecăreia dintre respectivele secvențe. Astfel în șirul $2 \\ 3 \\ 4 \\ 3$ puterea elementului $a_1$ este $1$ (fiind maxim doar în secvența formată din el însuși), a elementului $a_2$ este $2$ ($a_2$ fiind maxim în secvențele $2 \\ 3$ și $3$), a elementului $a_3$ este $6$ (fiind maxim în secvențele $2 \\ 3 \\ 4, 2 \\ 3 \\ 4 \\ 3, 3 \\ 4, 3 \\ 4 \\ 3, 4$ și $4 \\ 3$), iar a elementului $a_4$ este $1$.\n\n# Cerință\n\nScrieți un program care determină puterea cea mai mare a unui element din șirul dat, precum și numărul de elemente din șir care au cea mai mare putere.\n\n# Date de intrare\n\nFișierul `maxp.in` conține pe prima linie numărul natural $N$, iar pe a doua linie, în ordine, numerele naturale $a_1, a_2, \\dots, a_N$ separate prin câte un spațiu.\n\n# Date de ieșire\n\nFișierul `maxp.out` va conține pe prima linie un număr natural ce reprezintă puterea cea mai mare a unui element din șirul dat și pe a doua linie va conține un număr natural ce reprezintă numărul de elemente din șir care au cea mai mare putere.\n\n# Restricții și precizări\n\n* $2 \\leq N \\leq 200 \\ 000$;\n* Elementele șirului sunt numere naturale și au cel mult $6$ cifre\n* Se acordă 50% din punctaj pentru determinarea corectă a celei mai mari puteri a unui element din șir și 50% din punctaj pentru determinarea numărului de elemente din şir care au cea mai mare putere.",
    "header": {
      "problem_id": 836,
      "problem_name": "maxp",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.7,
      "memory_limit_mb": 32,
      "console_input": false,
      "input_filename": "maxp.in",
      "output_filename": "maxp.out",
      "multiple_solutions": true,
      "original_source": "OJI 2013 VIII: Problema 1"
    },
    "maxTimeSec": 1,
    "maxMemMB": "32m",
    "filename": {
      "input": "maxp.in",
      "output": "maxp.out"
    },
    "consoleInteraction": false
  }
}