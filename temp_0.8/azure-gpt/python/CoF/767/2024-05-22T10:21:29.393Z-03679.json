{
  "success": true,
  "attempt": 4,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 1,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/767/2024-05-22T10:21:29.393Z-03679.log",
  "attemptStart": 1716373289.393,
  "attemptEnd": 1716373331.27,
  "attemptDuration": 41.87700009346008,
  "code": "# Open input and output files\nwith open('dreptc.in', 'r') as file_in, open('dreptc.out', 'w') as file_out:\n    # Read the number of points N and number of colors C from the input file\n    N, C = map(int, file_in.readline().strip().split())\n    \n    # Initialize a dictionary to store the points by color\n    points_by_color = {color: [] for color in range(1, C + 1)}\n    \n    # Read the points and group them by color\n    for _ in range(N):\n        x, y, color = map(int, file_in.readline().strip().split())\n        points_by_color[color].append((x, y))\n    \n    # Function to count the number of rectangles formed by points of the same color\n    def count_rectangles(points):\n        rectangles = 0\n        points.sort()  # Sort the points by x-coordinate, then by y-coordinate\n        # Create a set of y-coordinates for each x-coordinate\n        y_coordinates = {}\n        for x, y in points:\n            if x not in y_coordinates:\n                y_coordinates[x] = set()\n            y_coordinates[x].add(y)\n        \n        # Iterate through pairs of x-coordinates\n        for i in range(len(points)):\n            for j in range(i + 1, len(points)):\n                x1, y1 = points[i]\n                x2, y2 = points[j]\n                # Check if we have a potential rectangle with x1 < x2 and y1 < y2\n                if x1 < x2 and y1 < y2:\n                    # Check if the other two corners exist\n                    if y2 in y_coordinates[x1] and y1 in y_coordinates[x2]:\n                        rectangles += 1\n        return rectangles\n    \n    # Initialize the counter for maximum rectangles\n    max_rectangles = 0\n    \n    # Calculate the number of rectangles for each color\n    for color in range(1, C + 1):\n        max_rectangles += count_rectangles(points_by_color[color])\n\n    # Write the result to the output file\n    file_out.write(str(max_rectangles))\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 2098,
  "metadata": {
    "id": 767,
    "examples": [
      {
        "in": "9 2\n3 10 1\n3 8 2\n3 6 1\n3 4 1\n3 0 1\n6 0 1\n6 4 1\n6 8 2\n6 10 1",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se consideră $N$ puncte colorate dispuse în plan. Ele sunt identificate prin coordontele lor întregi, pe axele OX și OY. Fiecare punct are asociat un număr natural între $1$ și $C$ reprezentând codul culorii lui. Un dreptunghi se numește *corect* dacă îndeplinește simultan următoarele condiții:\n\n* toate cele patru vârfuri se regăsesc printre cele N puncte date;\n* are laturile paralele cu axele OX, OY;\n* are vârfurile colorate în aceeași culoare.\n\n# Cerință\n\nSă se determine numărul maxim de dreptunghiuri *corecte* care se pot forma cu cele $N$ puncte din plan.\n\n# Date de intrare\n\nPe prima linie a fișierul text `dreptc.in` se găsesc două numere $N, MaxC$ reprezentând numărul de puncte din plan și numărul de culori asociate punctelor. Pe următoarele $N$ linii se citesc câte trei numere $x \\ y \\ c$ reprezentând în ordine coordonata pe axa OX (abscisa), coordonata pe axa OY (ordonata) și codul culorii asociate punctului.\n\n# Date de ieșire\n\nPe prima linie a fișierul text `dreptc.out` se va scrie un singur număr cu semnificația numărul maxim de dreptunghiuri corecte.\n\n# Restricții și precizări\n\n* $1 \\leq N \\leq 1 \\ 000$;\n* $1 \\leq C \\leq 5$;\n* $-1 \\ 000 \\leq x, y \\leq 1 \\ 000$;\n* Nu există două puncte cu aceleași coordonate\n* $40$% din teste vor avea $N \\leq 100$;",
    "header": {
      "problem_id": 767,
      "problem_name": "dreptc",
      "tags": "[Brute Force]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "dreptc.in",
      "output_filename": "dreptc.out",
      "multiple_solutions": false,
      "original_source": "OJI 2007 VIII: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "dreptc.in",
      "output": "dreptc.out"
    },
    "consoleInteraction": false
  }
}