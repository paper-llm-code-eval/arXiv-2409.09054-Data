{
  "success": true,
  "attempt": 1,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 0,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/767/2024-05-22T10:21:06.640Z-08302.log",
  "attemptStart": 1716373266.64,
  "attemptEnd": 1716373280.147,
  "attemptDuration": 13.506999969482422,
  "code": "# dreptc.py\n\ndef read_points(filename):\n    with open(filename, 'r') as file:\n        n, _ = map(int, file.readline().split())\n        points = [tuple(map(int, file.readline().split())) for _ in range(n)]\n    return points\n\ndef write_result(filename, result):\n    with open(filename, 'w') as file:\n        file.write(str(result))\n\ndef count_rectangles(points):\n    # Group points by color\n    color_to_points = {}\n    for x, y, c in points:\n        color_to_points.setdefault(c, {}).setdefault(x, set()).add(y)\n\n    # Count rectangles for each color group\n    rectangles_count = 0\n    for x_dict in color_to_points.values():\n        for x, ys in x_dict.items():\n            for other_x, other_ys in x_dict.items():\n                if x < other_x:  # Avoid counting the same rectangle twice\n                    common_ys = ys.intersection(other_ys)\n                    rectangles_count += len(common_ys) * (len(common_ys) - 1) // 2  # Combination of two ys\n\n    return rectangles_count\n\n# Main execution\npoints = read_points('dreptc.in')\nresult = count_rectangles(points)\nwrite_result('dreptc.out', result)\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1040,
  "metadata": {
    "id": 767,
    "examples": [
      {
        "in": "9 2\n3 10 1\n3 8 2\n3 6 1\n3 4 1\n3 0 1\n6 0 1\n6 4 1\n6 8 2\n6 10 1",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se consideră $N$ puncte colorate dispuse în plan. Ele sunt identificate prin coordontele lor întregi, pe axele OX și OY. Fiecare punct are asociat un număr natural între $1$ și $C$ reprezentând codul culorii lui. Un dreptunghi se numește *corect* dacă îndeplinește simultan următoarele condiții:\n\n* toate cele patru vârfuri se regăsesc printre cele N puncte date;\n* are laturile paralele cu axele OX, OY;\n* are vârfurile colorate în aceeași culoare.\n\n# Cerință\n\nSă se determine numărul maxim de dreptunghiuri *corecte* care se pot forma cu cele $N$ puncte din plan.\n\n# Date de intrare\n\nPe prima linie a fișierul text `dreptc.in` se găsesc două numere $N, MaxC$ reprezentând numărul de puncte din plan și numărul de culori asociate punctelor. Pe următoarele $N$ linii se citesc câte trei numere $x \\ y \\ c$ reprezentând în ordine coordonata pe axa OX (abscisa), coordonata pe axa OY (ordonata) și codul culorii asociate punctului.\n\n# Date de ieșire\n\nPe prima linie a fișierul text `dreptc.out` se va scrie un singur număr cu semnificația numărul maxim de dreptunghiuri corecte.\n\n# Restricții și precizări\n\n* $1 \\leq N \\leq 1 \\ 000$;\n* $1 \\leq C \\leq 5$;\n* $-1 \\ 000 \\leq x, y \\leq 1 \\ 000$;\n* Nu există două puncte cu aceleași coordonate\n* $40$% din teste vor avea $N \\leq 100$;",
    "header": {
      "problem_id": 767,
      "problem_name": "dreptc",
      "tags": "[Brute Force]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "dreptc.in",
      "output_filename": "dreptc.out",
      "multiple_solutions": false,
      "original_source": "OJI 2007 VIII: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "dreptc.in",
      "output": "dreptc.out"
    },
    "consoleInteraction": false
  }
}