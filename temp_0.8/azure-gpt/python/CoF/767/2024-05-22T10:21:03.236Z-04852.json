{
  "success": true,
  "attempt": 0,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 1,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/767/2024-05-22T10:21:03.236Z-04852.log",
  "attemptStart": 1716373263.236,
  "attemptEnd": 1716373298.668,
  "attemptDuration": 35.431999921798706,
  "code": "# dreptc.py\n\ndef count_rectangles(points_by_color):\n    rectangles = 0\n    for color, points in points_by_color.items():\n        x_coords = {}\n        for x, y in points:\n            if x not in x_coords:\n                x_coords[x] = []\n            x_coords[x].append(y)\n        \n        pairs_seen = {}\n        for ys in x_coords.values():\n            ys.sort()\n            n = len(ys)\n            for i in range(n):\n                for j in range(i + 1, n):\n                    pair = (ys[i], ys[j])\n                    if pair in pairs_seen:\n                        rectangles += pairs_seen[pair]\n                        pairs_seen[pair] += 1\n                    else:\n                        pairs_seen[pair] = 1\n        \n    return rectangles\n\n# Read input\nwith open('dreptc.in', 'r') as fin:\n    N, MaxC = map(int, fin.readline().split())\n    points_by_color = {}\n    for _ in range(N):\n        x, y, c = map(int, fin.readline().split())\n        if c not in points_by_color:\n            points_by_color[c] = []\n        points_by_color[c].append((x, y))\n\n# Solve the problem\nmax_rectangles = count_rectangles(points_by_color)\n\n# Write output\nwith open('dreptc.out', 'w') as fout:\n    fout.write(str(max_rectangles) + '\\n')\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 1697,
  "metadata": {
    "id": 767,
    "examples": [
      {
        "in": "9 2\n3 10 1\n3 8 2\n3 6 1\n3 4 1\n3 0 1\n6 0 1\n6 4 1\n6 8 2\n6 10 1",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se consideră $N$ puncte colorate dispuse în plan. Ele sunt identificate prin coordontele lor întregi, pe axele OX și OY. Fiecare punct are asociat un număr natural între $1$ și $C$ reprezentând codul culorii lui. Un dreptunghi se numește *corect* dacă îndeplinește simultan următoarele condiții:\n\n* toate cele patru vârfuri se regăsesc printre cele N puncte date;\n* are laturile paralele cu axele OX, OY;\n* are vârfurile colorate în aceeași culoare.\n\n# Cerință\n\nSă se determine numărul maxim de dreptunghiuri *corecte* care se pot forma cu cele $N$ puncte din plan.\n\n# Date de intrare\n\nPe prima linie a fișierul text `dreptc.in` se găsesc două numere $N, MaxC$ reprezentând numărul de puncte din plan și numărul de culori asociate punctelor. Pe următoarele $N$ linii se citesc câte trei numere $x \\ y \\ c$ reprezentând în ordine coordonata pe axa OX (abscisa), coordonata pe axa OY (ordonata) și codul culorii asociate punctului.\n\n# Date de ieșire\n\nPe prima linie a fișierul text `dreptc.out` se va scrie un singur număr cu semnificația numărul maxim de dreptunghiuri corecte.\n\n# Restricții și precizări\n\n* $1 \\leq N \\leq 1 \\ 000$;\n* $1 \\leq C \\leq 5$;\n* $-1 \\ 000 \\leq x, y \\leq 1 \\ 000$;\n* Nu există două puncte cu aceleași coordonate\n* $40$% din teste vor avea $N \\leq 100$;",
    "header": {
      "problem_id": 767,
      "problem_name": "dreptc",
      "tags": "[Brute Force]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "dreptc.in",
      "output_filename": "dreptc.out",
      "multiple_solutions": false,
      "original_source": "OJI 2007 VIII: Problema 2"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "dreptc.in",
      "output": "dreptc.out"
    },
    "consoleInteraction": false
  }
}