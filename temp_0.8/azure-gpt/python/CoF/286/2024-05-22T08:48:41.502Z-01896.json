{
  "success": true,
  "attempt": 4,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "python",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 2,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/python/CoF/286/2024-05-22T08:48:41.502Z-01896.log",
  "attemptStart": 1716367721.502,
  "attemptEnd": 1716367796.379,
  "attemptDuration": 74.8769998550415,
  "code": "MOD = 10**9 + 7\n\ndef read_input(filename):\n    with open(filename, 'r') as file:\n        T = int(file.readline().strip())\n        N, C = map(int, file.readline().split())\n        stations = [tuple(map(int, file.readline().split())) for _ in range(N)]\n        return T, C, N, stations\n\ndef write_output(filename, result):\n    with open(filename, 'w') as file:\n        file.write(str(result))\n\ndef calculate_regio_routes(N, C, stations):\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            if (stations[j][0] - stations[i][0]) * C == (stations[j][1] + stations[i][1]):\n                count = (count + 1) % MOD\n    return count\n\ndef calculate_express_routes(N, C, stations):\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            route_cost = (stations[j][0] - stations[i][0]) * C\n            depots_cost = stations[i][1] + stations[j][1]\n            if route_cost >= depots_cost:\n                # Count the subsets of the intermediate stations\n                count += pow(2, j - i - 1, MOD)\n                count %= MOD\n    return count\n\ndef solve_challenge(T, C, N, stations):\n    if T == 1:\n        return calculate_regio_routes(N, C, stations)\n    elif T == 2:\n        return calculate_express_routes(N, C, stations)\n    else:\n        raise ValueError(\"Invalid task type\")\n\ndef main():\n    T, C, N, stations = read_input('transport.in')\n    result = solve_challenge(T, C, N, stations)\n    write_output('transport.out', result)\n\nif __name__ == \"__main__\":\n    main()\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 3631,
  "metadata": {
    "id": 286,
    "examples": [
      {
        "in": "1\n5 1\n0 2\n1 1\n3 10\n4 15\n6 4",
        "out": "2",
        "explainer": ""
      },
      {
        "in": "2\n5 1\n0 2\n1 1\n3 10\n4 15\n6 4",
        "out": "12",
        "explainer": ""
      }
    ],
    "body": "*Anul 1905*\n\nUn stat din America de Sud și-a propus investiții majore în infrastructura feroviară. Brazilianul Badinho este managerul unei companii de transport feroviar pe o magistrală importantă. De-a lungul magistralei se află $N$ stații, numerotate de la $1$ la $N$. Fiecărei stații îi corespunde un număr $X_i$ care reprezintă numărul de kilometri de la începutul magistralei până la stația $i$ ($X_1 = 0$). Pentru simplitate Badinho reprezintă magistrala ca o dreaptă, iar stațiile ca puncte pe dreapta respectivă, stația $i$ aflându-se la coordonata $X_i$.\n\nO rută reprezintă o submulțime de cel puțin 2 stații dintre cele $N$, cu semnificația că în aceste stații se vor face opriri. Orice rută operată de Badinho are 2 stații numite capete, definite ca fiind cea mai apropiată stație, inclusă în rută, de începutul magistralei respectiv cea mai îndepărtată stație, inclusă în rută, de începutul magistralei.\n\nCompania lui Badinho va primi o subvenție pentru deschiderea unei noi rute, care va fi proporțională cu lungimea rutei deschise. Mai exact, Badinho va primi $C$ reali (realul este moneda națională a Braziliei) pentru fiecare kilometru din noua rută. Lungimea rutei se definește ca fiind distanța dintre capete.\n\nBadinho poate deschide două tipuri de rute:\n* Regio — se fac opriri în toate stațiile dintre cele două capete\n* Expres — unele stații dintre cele două capete pot fi traversate fără a opri în ele\n\nPentru a deschide o rută Badinho trebuie să construiască câte un depou în capetele rutei respective. Costul pentru a construi un depou în stația $i$ este $D_i$ reali.\n\nȘtiind că Badinho trebuie să cheltuiască întreaga sumă pe care ar primi-o dintr-o subvenție, să se determine:\n1. Numărul de moduri de a deschide o rută de tip Regio, $\\text{modulo }10^9 + 7$\n2. Numărul de moduri de a deschide o rută de tip Expres, $\\text{modulo }10^9 + 7$\n\n# Date de intrare\nÎn fișierul `transport.in` se află:\n* Pe prima linie tipul cerinței $T$, care poate avea valoarea $1$ sau $2$.\n* Pe a doua linie $N$ și $C$, separate printr-un spațiu, reprezentând numărul de stații, respectiv suma primită per kilometru ca subvenție.\n* Pe următoarele $N$ linii, pe linia $i + 2$ se află câte o pereche $X_i$ și $D_i$, separate printr-un spațiu, reprezentând distanța la care se află stația $i$ față de începutul magistralei, respectiv costul de a contrui un depou în stația $i$.\n\n# Date de ieșire\nÎn fișierul `transport.out` se va afișa:\n* Dacă $T = 1$, numărul de moduri de a deschide o rută de tip Regio, $\\text{modulo }10^9 + 7$\n* Dacă $T = 2$, numărul de moduri de a deschide o rută de tip Expres, $\\text{modulo }10^9 + 7$\n\n# Restricții\n* Două rute se consideră distincte dacă diferă prin cel puțin o stație.\n* $2 \\leq N \\leq 200\\ 000$, $1 \\leq C \\leq 10^9$\n* $0 \\leq X_i, D_i \\leq 10^9\\ \\forall \\ 1 \\leq i \\leq N$\n* $X_1 = 0$\n* Șirul $X$ este sortat strict crescător: $X_i \\lt X_j \\ \\forall \\ 1 \\leq i \\lt j \\leq N$.\n* Toate liniile de cale ferată ale magistralei sunt deja construite, singurele costuri pe care le va suporta Badinho sunt cele de construire a depourilor.\n\n## Subtask 1 (12 puncte)\n* $T = 1$, $N \\leq 1\\ 000$\n## Subtask 2 (26 puncte)\n* $T = 1$, $N \\leq 200\\ 000$\n## Subtask 3 (6 puncte)\n* $T = 2$, $N \\leq 15$\n## Subtask 4 (15 puncte)\n* $T = 2$, $N \\leq 1\\ 000$\n## Subtask 5 (41 puncte)\n* $T = 2$, $N \\leq 200\\ 000$",
    "header": {
      "problem_id": 286,
      "problem_name": "transport",
      "tags": "[Number Theory]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.55,
      "memory_limit_mb": 256,
      "console_input": false,
      "input_filename": "transport.in",
      "output_filename": "transport.out",
      "multiple_solutions": false,
      "original_source": "OJI 2022 X: Problema 3"
    },
    "maxTimeSec": 1,
    "maxMemMB": "256m",
    "filename": {
      "input": "transport.in",
      "output": "transport.out"
    },
    "consoleInteraction": false
  }
}