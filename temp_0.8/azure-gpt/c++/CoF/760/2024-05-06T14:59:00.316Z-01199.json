{
  "success": true,
  "attempt": 1,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "c++",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 2,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/c++/CoF/760/2024-05-06T14:59:00.316Z-01199.log",
  "attemptStart": 1715007540.316,
  "attemptEnd": 1715007598.896,
  "attemptDuration": 58.579999923706055,
  "code": "#include <fstream>\n#include <vector>\n\nint main() {\n    std::ifstream in(\"telecabina.in\");\n    std::ofstream out(\"telecabina.out\");\n    \n    int n;\n    in >> n;\n    std::vector<int> altitudes(n);\n    std::vector<int> people(n);\n    int total_people = 0;\n    long long fuel = 0;\n    int special_stations = 0;\n    bool ascending = true;\n\n    // Read all the stations' data.\n    for (int i = 0; i < n; ++i) {\n        in >> altitudes[i] >> people[i];\n        total_people += people[i];\n    }\n    in.close();\n\n    // Calculate fuel and count special stations.\n    for (int i = 1; i < n; ++i) {\n        int alt_diff = altitudes[i] - altitudes[i - 1];\n        if (alt_diff > 0) { // ascending\n            fuel += 3 * alt_diff;\n            if (!ascending) special_stations++; // Change from descending to ascending\n            ascending = true;\n        } else { // descending\n            fuel += -alt_diff; // alt_diff is negative, so subtract to add to fuel\n            if (ascending) special_stations++; // Change from ascending to descending\n            ascending = false;\n        }\n    }\n\n    // Write the results to the output file.\n    out << total_people << '\\n';\n    out << fuel << '\\n';\n    out << special_stations << '\\n';\n    out.close();\n\n    return 0;\n}\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 2775,
  "metadata": {
    "id": 760,
    "examples": [
      {
        "in": "6\n1200 3\n1204 2\n1199 8\n1197 0\n1202 10\n1205 0",
        "out": "23\n43\n2",
        "explainer": ""
      }
    ],
    "body": "În Munții Apuseni, din cauza condițiilor meteo nefavorabile din ultimul timp, transportul pe drumurile publice a devenit o problemă. S-au surpat porțiuni din drum, s-au rupt poduri și podețe, au căzut pomi peste șosea si multe altele. Au rămas astfel grupuri de case izolate, oamenii nemaiputând ajunge la oraș pentru a-și procura cele necesare. Pentru a ajunge la oraș, oamenii au construit o telecabină care leagă regiunile izolate, telecabină care a fost proiectată suficient de încăpătoare, astfel încât, în fiecare moment să fie posibil să urce toți oamenii care se află într-o stație.\nPentru fiecare dintre cele n stații ale telecabinei se cunoaște altitudinea (exprimată în metri) și numărul de persoane care urcă în telecabină. De asemenea, se știe că telecabina consumă $3$ litri/m de combustibil la urcare și $1$ litru/m de combustibil la coborâre. Distanțele între stații se echivalează practic cu diferențele de altitudini dintre stații. O stație în care se schimbă felul de deplasare, din urcare se trece în coborâre sau invers se numește stație specială.\n\n# Cerință\n\nScrieți un program care să determine câți oameni ajung la oraș cu telecabina, care este consumul telecabinei pentru transport și câte stații speciale există.\n\n# Date de intrare\n\n\nDe pe prima linie a fișierului de intrare `telecabina.in` se citește valoarea $n$, reprezentând numărul de stații (inclusiv orașul). De pe următoarele n linii ale fișierului de intrare se citesc apoi $n$ perechi de numere naturale `a b`, câte o pereche pe linie, unde $a$ reprezintă altitudinea stației, iar $b$ numărul de oameni care urcă în telecabină în stația respectivă. Între $a$ și $b$ există exact un spațiu.\n\n\n# Date de ieșire\n\n\nPe primul rând al fișierului de ieșire `telecabina.out` se va afișa numărul de oameni care ajung la oraș. Pe al doilea rând al fișierului se va afișa consumul telecabinei pentru transport. Pe al treilea rând al fișierului se va afișa numărul de stații speciale.\n\n# Restricții și precizări\n\n* $1 \\leq n \\leq 40$;\n* $1 \\leq a \\leq 2 \\ 000$;\n* $0 \\leq b \\leq 20$;\n* altitudinile oricăror două stații consecutive sunt diferite\n* în ultima stație (la oraș) nu urcă nici o persoană",
    "header": {
      "problem_id": 760,
      "problem_name": "telecabina",
      "tags": "[Implementation]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.1,
      "memory_limit_mb": 4,
      "console_input": false,
      "input_filename": "telecabina.in",
      "output_filename": "telecabina.out",
      "multiple_solutions": false,
      "original_source": "OJI 2007 V: Problema 1"
    },
    "maxTimeSec": 1,
    "maxMemMB": "6m",
    "filename": {
      "input": "telecabina.in",
      "output": "telecabina.out"
    },
    "consoleInteraction": false
  }
}