{
  "success": true,
  "attempt": 3,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "c++",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 4,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/c++/CoF/836/2024-05-06T16:44:36.151Z-03155.log",
  "attemptStart": 1715013876.151,
  "attemptEnd": 1715013999.018,
  "attemptDuration": 122.86699986457825,
  "code": "#include <fstream>\n#include <vector>\n#include <stack>\n\nint main() {\n    std::ifstream fin(\"maxp.in\");\n    std::ofstream fout(\"maxp.out\");\n\n    int N;\n    fin >> N;\n    std::vector<int> a(N);\n    std::vector<long long> left(N), right(N);\n\n    for (int i = 0; i < N; ++i) {\n        fin >> a[i];\n    }\n\n    std::stack<int> s;\n    // Calculate left span\n    for (int i = 0; i < N; ++i) {\n        while (!s.empty() && a[s.top()] < a[i]) {\n            s.pop();\n        }\n        left[i] = s.empty() ? i + 1 : i - s.top();\n        s.push(i);\n    }\n\n    // Clear the stack for the next pass\n    while (!s.empty()) s.pop();\n\n    // Calculate right span\n    for (int i = N - 1; i >= 0; --i) {\n        while (!s.empty() && a[s.top()] < a[i]) {\n            s.pop();\n        }\n        right[i] = s.empty() ? N - i : s.top() - i;\n        s.push(i);\n    }\n\n    long long max_power = 0;\n    int count = 0;\n\n    for (int i = 0; i < N; ++i) {\n        // Calculate the power of the element a[i]\n        long long power = left[i] * right[i];\n        if (power > max_power) {\n            max_power = power;\n            count = 1;\n        } else if (power == max_power) {\n            count++;\n        }\n    }\n\n    fout << max_power << \"\\n\" << count << \"\\n\";\n    fout.close();\n\n    return 0;\n}\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 4203,
  "metadata": {
    "id": 836,
    "examples": [
      {
        "in": "7\n9 3 4 5 1 2 2",
        "out": "12\n1",
        "explainer": ""
      },
      {
        "in": "6\n1 0 7 7 2 6",
        "out": "3\n2",
        "explainer": ""
      }
    ],
    "body": "Considerăm un șir de numere $a_1, a_2, \\dots, a_N$. O secvență nevidă în acest șir este de forma $a_i, a_{i+1}, \\dots, a_j$, unde $i \\leq j$. De exemplu, pentru $N = 4$ și șirul $2 \\ 3 \\ 4 \\ 3$, secvențele nevide sunt: $2, 2 \\ 3, 2 \\ 3 \\ 4, 2 \\ 3 \\ 4 \\ 3, 3, 3 \\ 4, 3 \\ 4 \\ 3, 4, 4 \\ 3, 3$. Definim puterea unui element $a_i$ ca fiind numărul de secvențe care-l conțin pe $a_i$ și în care $a_i$ este strict mai mare decât celelalte elemente ale fiecăreia dintre respectivele secvențe. Astfel în șirul $2 \\ 3 \\ 4 \\ 3$ puterea elementului $a_1$ este $1$ (fiind maxim doar în secvența formată din el însuși), a elementului $a_2$ este $2$ ($a_2$ fiind maxim în secvențele $2 \\ 3$ și $3$), a elementului $a_3$ este $6$ (fiind maxim în secvențele $2 \\ 3 \\ 4, 2 \\ 3 \\ 4 \\ 3, 3 \\ 4, 3 \\ 4 \\ 3, 4$ și $4 \\ 3$), iar a elementului $a_4$ este $1$.\n\n# Cerință\n\nScrieți un program care determină puterea cea mai mare a unui element din șirul dat, precum și numărul de elemente din șir care au cea mai mare putere.\n\n# Date de intrare\n\nFișierul `maxp.in` conține pe prima linie numărul natural $N$, iar pe a doua linie, în ordine, numerele naturale $a_1, a_2, \\dots, a_N$ separate prin câte un spațiu.\n\n# Date de ieșire\n\nFișierul `maxp.out` va conține pe prima linie un număr natural ce reprezintă puterea cea mai mare a unui element din șirul dat și pe a doua linie va conține un număr natural ce reprezintă numărul de elemente din șir care au cea mai mare putere.\n\n# Restricții și precizări\n\n* $2 \\leq N \\leq 200 \\ 000$;\n* Elementele șirului sunt numere naturale și au cel mult $6$ cifre\n* Se acordă 50% din punctaj pentru determinarea corectă a celei mai mari puteri a unui element din șir și 50% din punctaj pentru determinarea numărului de elemente din şir care au cea mai mare putere.",
    "header": {
      "problem_id": 836,
      "problem_name": "maxp",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.7,
      "memory_limit_mb": 32,
      "console_input": false,
      "input_filename": "maxp.in",
      "output_filename": "maxp.out",
      "multiple_solutions": true,
      "original_source": "OJI 2013 VIII: Problema 1"
    },
    "maxTimeSec": 1,
    "maxMemMB": "32m",
    "filename": {
      "input": "maxp.in",
      "output": "maxp.out"
    },
    "consoleInteraction": false
  }
}