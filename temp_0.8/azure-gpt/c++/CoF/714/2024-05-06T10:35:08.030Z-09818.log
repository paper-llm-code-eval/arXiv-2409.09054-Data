---------- user ----------

Here is a programming challenge. Points will be awarded for fastest code execution.
Create the most efficient solution for this challenge in c++. The code must compile and be correct.
The solution must read from `pinochio.in` and write to `pinochio.out`.
The solution must not use `cin >>` or `cout <<` or `printf()` or `scanf()` to read input data or write output data.

The solution must be written in a markdown code block.

---

În fiecare zi lucrătoare din săptămână, Pinochio spune câte o minciună datorită căreia nasul acestuia crește cu câte $p$ centimetri pe zi. Sâmbăta și duminica, când vine bunicul Gepeto acasă, pentru a nu-l supăra prea tare, Pinochio reușește să nu spună nici o minciună, ba chiar uitându-se în oglindă observă că în fiecare din aceste zile lungimea nasului său scade cu câte $1$ centimetru pe zi. Când începe o nouă săptămână, rămânând singur acasă Pinochio continuă șirul minciunilor.

# Cerință

Care este dimensiunea nasului lui Pinochio după $k$ zile știind că inițial nasul său măsura $n$ centimetri.

# Date de intrare

Din fișierul de intrare `pinochio.in` se citesc valorile $n$, $p$, $k$, care se găsesc pe prima linie a fișierului și sunt separate prin câte un spațiu.


# Date de ieșire


În fișierul de ieșire `pinochio.out` se va afișa pe prima linie un singur număr natural, numărul de centimetri cerut de problemă.


# Restricții și precizări

* $1 \leq n \leq 1 \ 000$;
* $1 \leq k \leq 256$;
* $1 \leq p \leq 100$;

---

Example:
`pinochio.in`
```
2 1 8
```

`pinochio.out`
```
6
```


---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:```cpp
#include <fstream>

int main() {
    std::ifstream in("pinochio.in");
    std::ofstream out("pinochio.out");

    int n, p, k, days_passed;
    in >> n >> p >> k;

    // Calculate the growth during weekdays
    int full_weeks = k / 7;
    int remaining_days = k % 7;
    days_passed = full_weeks * 5; // Number of weekdays passed
    
    // Add to days_passed the remaining days, but only if they are weekdays
    days_passed += (remaining_days > 5) ? 5 : remaining_days;

    // Calculate the new length after weekdays growth
    n += days_passed * p;

    // Calculate the shrink during weekends
    int weekends_passed = full_weeks * 2;
    
    // Add to weekends_passed the remaining weekend days, if any
    weekends_passed += (remaining_days > 5) ? (remaining_days - 5) : 0;

    // Calculate the new length after weekend shrink
    n -= weekends_passed;

    // Output the result
    out << n << std::endl;

    in.close();
    out.close();
    return 0;
}
```
This solution reads the input values from `pinochio.in` file without using `cin`, computes the final length of Pinocchio's nose after `k` days and outputs the result to `pinochio.out` file without using `cout`. It takes into account the growth of the nose during weekdays and the shrinkage during weekends.
