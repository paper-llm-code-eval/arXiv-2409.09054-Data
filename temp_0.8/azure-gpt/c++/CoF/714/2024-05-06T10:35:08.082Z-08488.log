---------- user ----------

Here is a programming challenge. Points will be awarded for fastest code execution.
Create the most efficient solution for this challenge in c++. The code must compile and be correct.
The solution must read from `pinochio.in` and write to `pinochio.out`.
The solution must not use `cin >>` or `cout <<` or `printf()` or `scanf()` to read input data or write output data.

The solution must be written in a markdown code block.

---

În fiecare zi lucrătoare din săptămână, Pinochio spune câte o minciună datorită căreia nasul acestuia crește cu câte $p$ centimetri pe zi. Sâmbăta și duminica, când vine bunicul Gepeto acasă, pentru a nu-l supăra prea tare, Pinochio reușește să nu spună nici o minciună, ba chiar uitându-se în oglindă observă că în fiecare din aceste zile lungimea nasului său scade cu câte $1$ centimetru pe zi. Când începe o nouă săptămână, rămânând singur acasă Pinochio continuă șirul minciunilor.

# Cerință

Care este dimensiunea nasului lui Pinochio după $k$ zile știind că inițial nasul său măsura $n$ centimetri.

# Date de intrare

Din fișierul de intrare `pinochio.in` se citesc valorile $n$, $p$, $k$, care se găsesc pe prima linie a fișierului și sunt separate prin câte un spațiu.


# Date de ieșire


În fișierul de ieșire `pinochio.out` se va afișa pe prima linie un singur număr natural, numărul de centimetri cerut de problemă.


# Restricții și precizări

* $1 \leq n \leq 1 \ 000$;
* $1 \leq k \leq 256$;
* $1 \leq p \leq 100$;

---

Example:
`pinochio.in`
```
2 1 8
```

`pinochio.out`
```
6
```


---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:
---------- assistant ----------

Before writing my solution in c++, I will think about the challenge step by step, come up with the most optimal solution, then I will verify the logic against the example.
Here are all the necessary steps to solve the challenge:```cpp
#include <fstream>

int main() {
    std::ifstream fin("pinochio.in");
    std::ofstream fout("pinochio.out");

    int n, p, k;
    fin >> n >> p >> k;

    // Calculate the number of full weeks and remaining days
    int full_weeks = k / 7;
    int remaining_days = k % 7;

    // Each week there are 5 days of growing and 2 days of shrinking
    int weekly_growth = 5 * p - 2;

    // Calculate total growth
    n += full_weeks * weekly_growth;

    // Calculate growth for the remaining days
    for (int i = 0; i < remaining_days; ++i) {
        // Monday to Friday
        if (i < 5) {
            n += p;
        } else {
            // Saturday and Sunday
            n -= 1;
        }
    }

    fout << n << '\n';

    fin.close();
    fout.close();

    return 0;
}
```
In this solution, I first calculate the number of full weeks that have passed and the number of days remaining in the final, potentially partial week. Each full week contributes 5 days of growth and 2 days of shrinkage, so I calculate the net change per week and multiply by the number of full weeks. Then, I calculate the growth or shrinkage for the remaining days.

The example provided indicates that the initial nose length is 2 cm, the daily growth is 1 cm, and the time span is 8 days. The solution properly accounts for the full week (5 days of growth, 2 cm of shrinkage) and the 1 remaining day of growth, resulting in a final length of 6 cm, which is the correct answer according to the example.
