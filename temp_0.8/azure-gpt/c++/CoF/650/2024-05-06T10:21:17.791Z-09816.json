{
  "success": true,
  "attempt": 3,
  "modelDesc": {
    "model": "azure-gpt",
    "chainOfThought": true,
    "options": {
      "temperature": 0.8
    }
  },
  "programmingLang": "c++",
  "temperature": 0.8,
  "chainOfThought": true,
  "depth": 4,
  "logfile": "run-oji/ro/temp_0.8/azure-gpt/c++/CoF/650/2024-05-06T10:21:17.791Z-09816.log",
  "attemptStart": 1714990877.791,
  "attemptEnd": 1714991062.158,
  "attemptDuration": 184.36700010299683,
  "code": "#include <fstream>\n#include <vector>\n#include <algorithm>\n\nstd::ifstream fin(\"yinyang.in\");\nstd::ofstream fout(\"yinyang.out\");\n\nint main() {\n    int N, M;\n    fin >> N >> M;\n\n    std::vector<std::vector<int>> matrix(N, std::vector<int>(M));\n    for (int i = 0; i < N; ++i) {\n        for (int j = 0; j < M; ++j) {\n            fin >> matrix[i][j];\n        }\n    }\n\n    int operations = 0;\n    \n    // Try fixing the matrix from the top-left corner to bottom-right corner\n    for (int i = 0; i < N; ++i) {\n        for (int j = 0; j < M; ++j) {\n            // Check and swap columns if needed\n            if (j < M - 1 && matrix[i][j] > matrix[i][j + 1]) {\n                for (int k = 0; k < N; ++k) {\n                    std::swap(matrix[k][j], matrix[k][j + 1]);\n                }\n                ++operations;\n            }\n            // Check and swap rows if needed\n            if (i < N - 1 && matrix[i][j] > matrix[i + 1][j]) {\n                for (int k = 0; k < M; ++k) {\n                    std::swap(matrix[i][k], matrix[i + 1][k]);\n                }\n                ++operations;\n            }\n        }\n    }\n\n    // Verify if the matrix is now in yin-yang condition\n    bool isYinYang = true;\n    for (int i = 1; i < N && isYinYang; ++i) {\n        for (int j = 1; j < M && isYinYang; ++j) {\n            if (matrix[i][j] < matrix[i - 1][j] || matrix[i][j] < matrix[i][j - 1]) {\n                isYinYang = false;\n            }\n        }\n    }\n\n    fout << (isYinYang ? operations : -1) << std::endl;\n\n    fin.close();\n    fout.close();\n\n    return 0;\n}\n",
  "maxFeedbackRounds": 5,
  "tokenCount": 4934,
  "metadata": {
    "id": 650,
    "examples": [
      {
        "in": "2 3\n1 2 4\n3 5 6",
        "out": "0",
        "explainer": ""
      },
      {
        "in": "2 3\n6 6 5\n4 6 2",
        "out": "3",
        "explainer": ""
      }
    ],
    "body": "Se dă o matrice $A$ cu $N$ linii și $M$ coloane, cu valori cuprinse între $1$ și $N \\cdot M$ inclusiv, nu neapărat distincte. O **operație** constă în selectarea a două linii sau două coloane consecutive și interschimbarea acestora (swap). O matrice **yin-yang** este o matrice în care $A[i][j] \\geq A[i][j – 1]$, pentru orice pereche $(i, j)$ cu $1 \\leq i \\leq N$ și $2 \\leq j \\leq M$ și $A[i][j] \\geq A[i – 1][j]$, pentru orice pereche $(i, j)$ cu $2 \\leq i \\leq N$ și $1 \\leq j \\leq M$.\n\n# Cerinţă\n\nSă se determine numărul minim de operații necesare pentru a transforma matricea dată într-o matrice yin-yang.\n\n# Date de intrare\n\nÎn fișierul de intrare `yinyang.in` se află scrise pe prima linie numerele naturale $N$ și $M$, cu semnificația din enunț. Pe fiecare dintre următoarele $N$ linii se află câte $M$ numere naturale, reprezentând elementele matricei date $A$. Numerele aflate pe aceeași linie a fișierului sunt separate prin câte un spațiu.\n\n# Date de ieșire\n\nÎn fișierul `yinyang.out` se va scrie numărul minim de operații cerut sau $-1$ dacă nu există soluție.\n\n# Restricții și precizări\n\n* $1 \\leq N, M \\leq 100$;\n* Pentru teste în valoare de $9$ puncte: $1 \\leq N, M \\leq 5$;\n- Pentru alte teste în valoare de $18$ puncte: $N = 1$;\n- Pentru alte teste în valoare de $36$ de puncte elementele din matrice sunt **DISTINCTE**.",
    "header": {
      "problem_id": 650,
      "problem_name": "yinyang",
      "tags": "[Ad hoc, Sorting]",
      "language": "romanian",
      "interactive": false,
      "time_limit_s": 0.2,
      "memory_limit_mb": 64,
      "console_input": false,
      "input_filename": "yinyang.in",
      "output_filename": "yinyang.out",
      "multiple_solutions": false,
      "original_source": "OJI 2019 X: Problema 3"
    },
    "maxTimeSec": 1,
    "maxMemMB": "64m",
    "filename": {
      "input": "yinyang.in",
      "output": "yinyang.out"
    },
    "consoleInteraction": false
  }
}